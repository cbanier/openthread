<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="8814px" preserveAspectRatio="none" style="width:5781px;height:8814px;" version="1.1" viewBox="0 0 5781 8814" width="5781px" zoomAndPan="magnify"><defs><filter height="300%" id="f1mvd7dabg6f5h" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[fb5f97c492c2fe56f91ed40335b2181f]
cluster C_0001387619747296316447--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="22,24,48,24,55,49.0679,5759,49.0679,5759,8802,22,8802,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="55" y1="49.0679" y2="49.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="20" x="26" y="40.9659">src</text><!--MD5=[0921fd70008aa4ff3e3524516e4b6abe]
cluster C_0002278286474666070424--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="46,70,82,70,89,95.0679,5735,95.0679,5735,8778,46,8778,46,70" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="46" x2="89" y1="95.0679" y2="95.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="30" x="50" y="86.9659">core</text><!--MD5=[753ed5a5e3b49a09ecce3644c489331c]
cluster C_0001183054535709160710--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="159,116,211,116,218,141.0679,2339,141.0679,2339,5080,159,5080,159,116" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="159" x2="218" y1="141.0679" y2="141.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="46" x="163" y="132.9659">thread</text><!--MD5=[2c9a36fa5d603618b500a3c3b0fb0b44]
cluster C_0000538251318670428019--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="4118,4776,4186,4776,4193,4801.0679,5011,4801.0679,5011,8072.5,4118,8072.5,4118,4776" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="4118" x2="4193" y1="4801.0679" y2="4801.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="62" x="4122" y="4792.9659">common</text><!--MD5=[702be35102f90b025308519d9ae5fbd5]
cluster C_0000215011246174653850--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="2380,3270.5,2409,3270.5,2416,3295.5679,4081,3295.5679,4081,5432,2380,5432,2380,3270.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="2380" x2="2416" y1="3295.5679" y2="3295.5679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="23" x="2384" y="3287.4659">net</text><!--MD5=[6291333f0e784483cfe179640c99dc94]
cluster C_0001889813544493651964--><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="5035,7162,5074,7162,5081,7187.0679,5711,7187.0679,5711,8754,5035,8754,5035,7162" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="5035" x2="5081" y1="7187.0679" y2="7187.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="33" x="5039" y="7178.9659">coap</text><!--MD5=[5067121e26e51bd9c4527c319272e723]
class C_0000683747308386236353--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="92.9457" id="C_0000683747308386236353" style="stroke: #A80036; stroke-width: 1.5;" width="420" x="1903" y="629.5"/><ellipse cx="2014.75" cy="645.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2017.7188,651.1406 Q2017.1406,651.4375 2016.5,651.5781 Q2015.8594,651.7344 2015.1563,651.7344 Q2012.6563,651.7344 2011.3281,650.0938 Q2010.0156,648.4375 2010.0156,645.3125 Q2010.0156,642.1875 2011.3281,640.5313 Q2012.6563,638.875 2015.1563,638.875 Q2015.8594,638.875 2016.5,639.0313 Q2017.1563,639.1875 2017.7188,639.4844 L2017.7188,642.2031 Q2017.0938,641.625 2016.5,641.3594 Q2015.9063,641.0781 2015.2813,641.0781 Q2013.9375,641.0781 2013.25,642.1563 Q2012.5625,643.2188 2012.5625,645.3125 Q2012.5625,647.4063 2013.25,648.4844 Q2013.9375,649.5469 2015.2813,649.5469 Q2015.9063,649.5469 2016.5,649.2813 Q2017.0938,649 2017.7188,648.4219 L2017.7188,651.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="188" x="2035.25" y="650.156">NetworkData::LowpanContextInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1904" x2="2322" y1="661.5" y2="661.5"/><ellipse cx="1914" cy="672.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1923" y="677.2589">GetPrefix() const : const Ip6::Prefix &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1911" y="684.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1923" y="692.2408">GetPrefix() : Ip6::Prefix &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1911" y="699.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="1923" y="707.2227">SetFrom(const PrefixTlv &amp; aPrefixTlv, const ContextTlv &amp; aContextTlv) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1904" x2="2322" y1="714.4457" y2="714.4457"/><!--MD5=[9461b6700e06965e874049bb61ba365a]
class C_0001346570432467457356--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="107.9276" id="C_0001346570432467457356" style="stroke: #A80036; stroke-width: 1.5;" width="143" x="785.5" y="1967"/><ellipse cx="809.05" cy="1983" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M812.0188,1988.6406 Q811.4406,1988.9375 810.8,1989.0781 Q810.1594,1989.2344 809.4563,1989.2344 Q806.9563,1989.2344 805.6281,1987.5938 Q804.3156,1985.9375 804.3156,1982.8125 Q804.3156,1979.6875 805.6281,1978.0313 Q806.9563,1976.375 809.4563,1976.375 Q810.1594,1976.375 810.8,1976.5313 Q811.4563,1976.6875 812.0188,1976.9844 L812.0188,1979.7031 Q811.3938,1979.125 810.8,1978.8594 Q810.2063,1978.5781 809.5813,1978.5781 Q808.2375,1978.5781 807.55,1979.6563 Q806.8625,1980.7188 806.8625,1982.8125 Q806.8625,1984.9063 807.55,1985.9844 Q808.2375,1987.0469 809.5813,1987.0469 Q810.2063,1987.0469 810.8,1986.7813 Q811.3938,1986.5 812.0188,1985.9219 L812.0188,1988.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="824.95" y="1987.656">Lowpan::Context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="786.5" x2="927.5" y1="1999" y2="1999"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="786.5" x2="927.5" y1="2007" y2="2007"/><ellipse cx="796.5" cy="2018" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="805.5" y="2022.7589">mCompressFlag : bool</text><ellipse cx="796.5" cy="2032.9819" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="805.5" y="2037.7408">mContextId : uint8_t</text><ellipse cx="796.5" cy="2047.9638" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="805.5" y="2052.7227">mIsValid : bool</text><ellipse cx="796.5" cy="2062.9457" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="805.5" y="2067.7046">mPrefix : Ip6::Prefix</text><!--MD5=[a03cb49e7d6b33756ccc94dc5e5c9386]
class C_0001332924320389650839--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="999.8589" id="C_0001332924320389650839" style="stroke: #A80036; stroke-width: 1.5;" width="923" x="395.5" y="176"/><ellipse cx="806.75" cy="192" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M809.7188,197.6406 Q809.1406,197.9375 808.5,198.0781 Q807.8594,198.2344 807.1563,198.2344 Q804.6563,198.2344 803.3281,196.5938 Q802.0156,194.9375 802.0156,191.8125 Q802.0156,188.6875 803.3281,187.0313 Q804.6563,185.375 807.1563,185.375 Q807.8594,185.375 808.5,185.5313 Q809.1563,185.6875 809.7188,185.9844 L809.7188,188.7031 Q809.0938,188.125 808.5,187.8594 Q807.9063,187.5781 807.2813,187.5781 Q805.9375,187.5781 805.25,188.6563 Q804.5625,189.7188 804.5625,191.8125 Q804.5625,193.9063 805.25,194.9844 Q805.9375,196.0469 807.2813,196.0469 Q807.9063,196.0469 808.5,195.7813 Q809.0938,195.5 809.7188,194.9219 L809.7188,197.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="827.25" y="196.656">Lowpan::Lowpan</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="396.5" x2="1317.5" y1="208" y2="208"/><ellipse cx="406.5" cy="219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="415.5" y="223.7589">Lowpan(Instance &amp; aInstance) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="396.5" x2="1317.5" y1="230.9819" y2="230.9819"/><ellipse cx="406.5" cy="241.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="562" x="415.5" y="246.7408">Compress(Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs, FrameBuilder &amp; aFrameBuilder) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="253.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="694" x="415.5" y="261.7227">Compress(Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs, FrameBuilder &amp; aFrameBuilder, uint8_t &amp; aHeaderDepth) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="268.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="897" x="415.5" y="276.7046">CompressDestinationIid(const Mac::Address &amp; aMacAddr, const Ip6::Address &amp; aIpAddr, const Context &amp; aContext, uint16_t &amp; aHcCtl, FrameBuilder &amp; aFrameBuilder) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="283.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="415.5" y="291.6865">CompressExtensionHeader(Message &amp; aMessage, FrameBuilder &amp; aFrameBuilder, uint8_t &amp; aNextHeader) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="298.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="415.5" y="306.6684">CompressMulticast(const Ip6::Address &amp; aIpAddr, uint16_t &amp; aHcCtl, FrameBuilder &amp; aFrameBuilder) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="313.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="873" x="415.5" y="321.6502">CompressSourceIid(const Mac::Address &amp; aMacAddr, const Ip6::Address &amp; aIpAddr, const Context &amp; aContext, uint16_t &amp; aHcCtl, FrameBuilder &amp; aFrameBuilder) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="328.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="415.5" y="336.6321">CompressUdp(Message &amp; aMessage, FrameBuilder &amp; aFrameBuilder) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="343.8551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="570" x="415.5" y="351.614">ComputeIid(const Mac::Address &amp; aMacAddr, const Context &amp; aContext, Ip6::InterfaceIdentifier &amp; aIid) : Error</text><ellipse cx="406.5" cy="361.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="692" x="415.5" y="366.5959">Decompress(Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs, FrameData &amp; aFrameData, uint16_t aDatagramLength) : Error</text><ellipse cx="406.5" cy="376.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="811" x="415.5" y="381.5778">DecompressBaseHeader(Ip6::Header &amp; aIp6Header, bool &amp; aCompressedNextHeader, const Mac::Addresses &amp; aMacAddrs, FrameData &amp; aFrameData) : Error</text><ellipse cx="406.5" cy="391.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="415.5" y="396.5597">DecompressEcn(const Message &amp; aMessage, uint16_t aOffset) const : Ip6::Ecn</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="403.7827"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="415.5" y="411.5416">DecompressExtensionHeader(Message &amp; aMessage, FrameData &amp; aFrameData) : Error</text><ellipse cx="406.5" cy="421.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="415.5" y="426.5235">DecompressUdpHeader(Ip6::Udp::Header &amp; aUdpHeader, FrameData &amp; aFrameData) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="433.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="563" x="415.5" y="441.5053">DecompressUdpHeader(Message &amp; aMessage, FrameData &amp; aFrameData, uint16_t aDatagramLength) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="448.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="415.5" y="456.4872">DispatchToNextHeader(uint8_t aDispatch, uint8_t &amp; aNextHeader) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="463.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="415.5" y="471.4691">FindContextForId(uint8_t aContextId, Context &amp; aContext) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="478.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="523" x="415.5" y="486.451">FindContextToCompressAddress(const Ip6::Address &amp; aIp6Address, Context &amp; aContext) const : void</text><ellipse cx="406.5" cy="496.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="268" x="415.5" y="501.4329">IsLowpanHc(const FrameData &amp; aFrameData) : bool</text><ellipse cx="406.5" cy="511.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="415.5" y="516.4148">IsLowpanHc(const uint8_t * aHeader) : bool</text><ellipse cx="406.5" cy="526.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="415.5" y="531.3967">MarkCompressedEcn(Message &amp; aMessage, uint16_t aOffset) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="396.5" x2="1317.5" y1="538.6196" y2="538.6196"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="546.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="415.5" y="554.3786">kEcnMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="561.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="415.5" y="569.3604">kEcnOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="576.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="163" x="415.5" y="584.3423">kExtHdrDispatch : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="591.5653"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="190" x="415.5" y="599.3242">kExtHdrDispatchMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="606.5472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="415.5" y="614.3061">kExtHdrEidDst : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="621.5291"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="185" x="415.5" y="629.288">kExtHdrEidFragment : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="636.511"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="156" x="415.5" y="644.2699">kExtHdrEidHbh : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="651.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="415.5" y="659.2518">kExtHdrEidIp6 : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="666.4747"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="161" x="415.5" y="674.2337">kExtHdrEidMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="681.4566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="415.5" y="689.2155">kExtHdrEidMobility : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="696.4385"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="415.5" y="704.1974">kExtHdrEidRouting : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="711.4204"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="415.5" y="719.1793">kExtHdrMaxLength : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="726.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="415.5" y="734.1612">kExtHdrNextHeader : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="741.3842"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="153" x="415.5" y="749.1431">kHcContextId : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="756.3661"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="146" x="415.5" y="764.125">kHcDispatch : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="771.348"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="173" x="415.5" y="779.1069">kHcDispatchMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="786.3298"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="185" x="415.5" y="794.0888">kHcDstAddrContext : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="801.3117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="415.5" y="809.0706">kHcDstAddrMode0 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="816.2936"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="415.5" y="824.0525">kHcDstAddrMode1 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="831.2755"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="415.5" y="839.0344">kHcDstAddrMode2 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="846.2574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="415.5" y="854.0163">kHcDstAddrMode3 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="861.2393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="415.5" y="868.9982">kHcDstAddrModeMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="876.2212"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="154" x="415.5" y="883.9801">kHcFlowLabel : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="891.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="155" x="415.5" y="898.962">kHcHopLimit1 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="906.185"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="415.5" y="913.9439">kHcHopLimit255 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="921.1668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="161" x="415.5" y="928.9258">kHcHopLimit64 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="936.1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="415.5" y="943.9076">kHcHopLimitMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="951.1306"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="148" x="415.5" y="958.8895">kHcMulticast : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="966.1125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="163" x="415.5" y="973.8714">kHcNextHeader : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="981.0944"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="415.5" y="988.8533">kHcSrcAddrContext : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="996.0763"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="415.5" y="1003.8352">kHcSrcAddrMode0 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1011.0582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="415.5" y="1018.8171">kHcSrcAddrMode1 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1026.0401"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="415.5" y="1033.799">kHcSrcAddrMode2 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1041.0219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="415.5" y="1048.7809">kHcSrcAddrMode3 : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1056.0038"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="200" x="415.5" y="1063.7627">kHcSrcAddrModeMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1070.9857"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="160" x="415.5" y="1078.7446">kHcTrafficClass : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1085.9676"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="415.5" y="1093.7265">kHcTrafficFlow : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1100.9495"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="186" x="415.5" y="1108.7084">kHcTrafficFlowMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1115.9314"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="157" x="415.5" y="1123.6903">kUdpChecksum : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1130.9133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="415.5" y="1138.6722">kUdpDispatch : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1145.8952"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="415.5" y="1153.6541">kUdpDispatchMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="403.5" y="1160.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="154" x="415.5" y="1168.636">kUdpPortMask : const uint8_t</text><!--MD5=[b496fc4a33570989f5aeff91d1003c77]
class C_0001265256160105741077--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="407.5653" id="C_0001265256160105741077" style="stroke: #A80036; stroke-width: 1.5;" width="514" x="1354" y="472"/><ellipse cx="1545.75" cy="488" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1548.7188,493.6406 Q1548.1406,493.9375 1547.5,494.0781 Q1546.8594,494.2344 1546.1563,494.2344 Q1543.6563,494.2344 1542.3281,492.5938 Q1541.0156,490.9375 1541.0156,487.8125 Q1541.0156,484.6875 1542.3281,483.0313 Q1543.6563,481.375 1546.1563,481.375 Q1546.8594,481.375 1547.5,481.5313 Q1548.1563,481.6875 1548.7188,481.9844 L1548.7188,484.7031 Q1548.0938,484.125 1547.5,483.8594 Q1546.9063,483.5781 1546.2813,483.5781 Q1544.9375,483.5781 1544.25,484.6563 Q1543.5625,485.7188 1543.5625,487.8125 Q1543.5625,489.9063 1544.25,490.9844 Q1544.9375,492.0469 1546.2813,492.0469 Q1546.9063,492.0469 1547.5,491.7813 Q1548.0938,491.5 1548.7188,490.9219 L1548.7188,493.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="1566.25" y="492.656">Lowpan::MeshHeader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1355" x2="1867" y1="504" y2="504"/><ellipse cx="1365" cy="515" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="1374" y="519.7589">AppendTo(FrameBuilder &amp; aFrameBuilder) const : Error</text><ellipse cx="1365" cy="529.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1374" y="534.7408">AppendTo(Message &amp; aMessage) const : Error</text><ellipse cx="1365" cy="544.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1374" y="549.7227">DecrementHopsLeft() : void</text><ellipse cx="1365" cy="559.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1374" y="564.7046">GetDestination() const : uint16_t</text><ellipse cx="1365" cy="574.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1374" y="579.6865">GetHeaderLength() const : uint16_t</text><ellipse cx="1365" cy="589.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1374" y="594.6684">GetHopsLeft() const : uint8_t</text><ellipse cx="1365" cy="604.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1374" y="609.6502">GetSource() const : uint16_t</text><ellipse cx="1365" cy="619.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1374" y="624.6321">Init(uint16_t aSource, uint16_t aDestination, uint8_t aHopsLeft) : void</text><ellipse cx="1365" cy="634.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="279" x="1374" y="639.614">IsMeshHeader(const FrameData &amp; aFrameData) : bool</text><ellipse cx="1365" cy="649.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="1374" y="654.5959">ParseFrom(const uint8_t * aFrame, uint16_t aFrameLength, uint16_t &amp; aHeaderLength) : Error</text><ellipse cx="1365" cy="664.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1374" y="669.5778">ParseFrom(FrameData &amp; aFrameData) : Error</text><ellipse cx="1365" cy="679.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1374" y="684.5597">ParseFrom(const Message &amp; aMessage) : Error</text><ellipse cx="1365" cy="694.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="1374" y="699.5416">ParseFrom(const Message &amp; aMessage, uint16_t &amp; aHeaderLength) : Error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1355" x2="1867" y1="706.7645" y2="706.7645"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="714.7645"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="217" x="1374" y="722.5235">kDeepHopsHeaderLength : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="729.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="156" x="1374" y="737.5053">kDeepHopsLeft : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="744.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1374" y="752.4872">kDestShort : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="759.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="1374" y="767.4691">kDispatch : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="774.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="154" x="1374" y="782.451">kDispatchMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="789.674"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="156" x="1374" y="797.4329">kHopsLeftMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="804.6559"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="1374" y="812.4148">kMinHeaderLength : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="819.6378"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="147" x="1374" y="827.3967">kSourceShort : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="834.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1374" y="842.3786">mDestination : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="849.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1374" y="857.3604">mHopsLeft : uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1362" y="864.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1374" y="872.3423">mSource : uint16_t</text><!--MD5=[7733fbfb3e507b22ea02d3098f540e34]
class C_0000603590511880671658--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="1718.9895" id="C_0000603590511880671658" style="stroke: #A80036; stroke-width: 1.5;" width="1364" x="959" y="2866"/><ellipse cx="1592.25" cy="2882" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1595.2188,2887.6406 Q1594.6406,2887.9375 1594,2888.0781 Q1593.3594,2888.2344 1592.6563,2888.2344 Q1590.1563,2888.2344 1588.8281,2886.5938 Q1587.5156,2884.9375 1587.5156,2881.8125 Q1587.5156,2878.6875 1588.8281,2877.0313 Q1590.1563,2875.375 1592.6563,2875.375 Q1593.3594,2875.375 1594,2875.5313 Q1594.6563,2875.6875 1595.2188,2875.9844 L1595.2188,2878.7031 Q1594.5938,2878.125 1594,2877.8594 Q1593.4063,2877.5781 1592.7813,2877.5781 Q1591.4375,2877.5781 1590.75,2878.6563 Q1590.0625,2879.7188 1590.0625,2881.8125 Q1590.0625,2883.9063 1590.75,2884.9844 Q1591.4375,2886.0469 1592.7813,2886.0469 Q1593.4063,2886.0469 1594,2885.7813 Q1594.5938,2885.5 1595.2188,2884.9219 L1595.2188,2887.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1612.75" y="2886.656">MeshForwarder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="960" x2="2322" y1="2898" y2="2898"/><ellipse cx="970" cy="2909" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="979" y="2913.7589">MeshForwarder(Instance &amp; aInstance) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="960" x2="2322" y1="2920.9819" y2="2920.9819"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="2928.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="979" y="2936.7408">AnycastRouteLookup(uint8_t aServiceId, AnycastType aType, uint16_t &amp; aMeshDest) const : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="2943.9638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="979" y="2951.7227">AppendHeaderIe(const Message * aMessage, Mac::TxFrame &amp; aFrame) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="2958.9457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="979" y="2966.7046">ApplyDirectTxQueueLimit(Message &amp; aMessage) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="2973.9276"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="979" y="2981.6865">CalcFrameVersion(const Neighbor * aNeighbor, bool aIePresent) const : Mac::Frame::Version</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="2988.9094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="979" y="2996.6684">CalcIePresent(const Message * aMessage) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3003.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="979" y="3011.6502">CheckReachability(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMeshAddrs) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3018.8732"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="979" y="3026.6321">ClearReassemblyList() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3033.8551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="979" y="3041.614">EvaluateRoutingCost(uint16_t aDest, uint8_t &amp; aBestCost, uint16_t &amp; aBestDest) const : void</text><ellipse cx="970" cy="3051.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="979" y="3056.5959">EvictMessage(Message::Priority aPriority) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3063.8189"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="979" y="3071.5778">EvictMessage(Message &amp; aMessage) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3078.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="979" y="3086.5597">FinalizeMessageDirectTx(Message &amp; aMessage, Error aError) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3093.7827"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="739" x="979" y="3101.5416">FrameToMessage(const FrameData &amp; aFrameData, uint16_t aDatagramSize, const Mac::Addresses &amp; aMacAddrs, Message *&amp; aMessage) : Error</text><ellipse cx="970" cy="3111.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="979" y="3116.5235">GetCounters() const : const otIpCounters &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3123.7464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="692" x="979" y="3131.5053">GetForwardFramePriority(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMeshAddrs, Message::Priority &amp; aPriority) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3138.7283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="662" x="979" y="3146.4872">GetFragmentPriority(Lowpan::FragmentHeader &amp; aFragmentHeader, uint16_t aSrcRloc16, Message::Priority &amp; aPriority) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3153.7102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="979" y="3161.4691">GetFramePriority(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMacAddrs, Message::Priority &amp; aPriority) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3168.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="979" y="3176.451">GetMacDestinationAddress(const Ip6::Address &amp; aIp6Addr, Mac::Address &amp; aMacAddr) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3183.674"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="979" y="3191.4329">GetMacSourceAddress(const Ip6::Address &amp; aIp6Addr, Mac::Address &amp; aMacAddr) : void</text><ellipse cx="970" cy="3201.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="979" y="3206.4148">GetMaxTimeInQueue() const : uint32_t</text><ellipse cx="970" cy="3216.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="979" y="3221.3967">GetReassemblyQueue() const : const MessageQueue &amp;</text><ellipse cx="970" cy="3231.6196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="979" y="3236.3786">GetRxOnWhenIdle() const : bool</text><ellipse cx="970" cy="3246.6015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="979" y="3251.3604">GetSendQueue() const : const PriorityQueue &amp;</text><ellipse cx="970" cy="3261.5834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="979" y="3266.3423">GetTimeInQueueHistogram(uint16_t &amp; aNumBins, uint32_t &amp; aBinInterval) const : const uint32_t *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3273.5653"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="979" y="3281.3242">HandleDatagram(Message &amp; aMessage, const Mac::Address &amp; aMacSource) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3288.5472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="979" y="3296.3061">HandleDiscoverComplete() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3303.5291"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="631" x="979" y="3311.288">HandleFragment(FrameData &amp; aFrameData, const Mac::Addresses &amp; aMacAddrs, const ThreadLinkInfo &amp; aLinkInfo) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3318.511"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="979" y="3326.2699">HandleFrameRequest(Mac::TxFrames &amp; aTxFrames) : Mac::TxFrame *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3333.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="979" y="3341.2518">HandleLowpanHC(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMacAddrs, const ThreadLinkInfo &amp; aLinkInfo) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3348.4747"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="602" x="979" y="3356.2337">HandleMesh(FrameData &amp; aFrameData, const Mac::Address &amp; aMacSource, const ThreadLinkInfo &amp; aLinkInfo) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3363.4566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="979" y="3371.2155">HandleReceivedFrame(Mac::RxFrame &amp; aFrame) : void</text><ellipse cx="970" cy="3381.4385" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="979" y="3386.1974">HandleResolved(const Ip6::Address &amp; aEid, Error aError) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3393.4204"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="979" y="3401.1793">HandleSentFrame(Mac::TxFrame &amp; aFrame, Error aError) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3408.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="979" y="3416.1612">HandleTimeTick() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3423.3842"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="979" y="3431.1431">HandleTxDelayTimer() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3438.3661"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="979" y="3446.125">IsDirectTxQueueOverMaxFrameThreshold() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3453.348"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="916" x="979" y="3461.1069">LogFragmentFrameDrop(Error aError, uint16_t aFrameLength, const Mac::Addresses &amp; aMacAddrs, const Lowpan::FragmentHeader &amp; aFragmentHeader, bool aIsSecure) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3468.3298"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="979" y="3476.0888">LogFrame(const char * aActionText, const Mac::Frame &amp; aFrame, Error aError) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3483.3117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="733" x="979" y="3491.0706">LogIp6Message(MessageAction aAction, const Message &amp; aMessage, const Mac::Address * aAddress, Error aError, LogLevel aLogLevel) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3498.2936"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="979" y="3506.0525">LogIp6SourceDestAddresses(const Ip6::Headers &amp; aHeaders, LogLevel aLogLevel) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3513.2755"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="979" y="3521.0344">LogLowpanHcFrameDrop(Error aError, uint16_t aFrameLength, const Mac::Addresses &amp; aMacAddrs, bool aIsSecure) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3528.2574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1079" x="979" y="3536.0163">LogMeshFragmentHeader(MessageAction aAction, const Message &amp; aMessage, const Mac::Address * aMacAddress, Error aError, uint16_t &amp; aOffset, Mac::Addresses &amp; aMeshAddrs, LogLevel aLogLevel) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3543.2393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="670" x="979" y="3550.9982">LogMeshIpHeader(const Message &amp; aMessage, uint16_t aOffset, const Mac::Addresses &amp; aMeshAddrs, LogLevel aLogLevel) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3558.2212"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="744" x="979" y="3565.9801">LogMeshMessage(MessageAction aAction, const Message &amp; aMessage, const Mac::Address * aAddress, Error aError, LogLevel aLogLevel) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3573.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="979" y="3580.962">LogMessage(MessageAction aAction, const Message &amp; aMessage, Error aError) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3588.185"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="979" y="3595.9439">LogMessage(MessageAction aAction, const Message &amp; aMessage) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3603.1668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="607" x="979" y="3610.9258">LogMessage(MessageAction aAction, const Message &amp; aMessage, Error aError, const Mac::Address * aAddress) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3618.1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="979" y="3625.9076">MessageActionToString(MessageAction aAction, Error aError) : const char *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3633.1306"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="979" y="3640.8895">MessagePriorityToString(const Message &amp; aMessage) : const char *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3648.1125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="979" y="3655.8714">PauseMessageTransmissions() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3663.0944"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1063" x="979" y="3670.8533">PrepareDataFrame(Mac::TxFrame &amp; aFrame, Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs, bool aAddMeshHeader, uint16_t aMeshSource, uint16_t aMeshDest, bool aAddFragHeader) : uint16_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3678.0763"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="691" x="979" y="3685.8352">PrepareDataFrameWithNoMeshHeader(Mac::TxFrame &amp; aFrame, Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs) : uint16_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3693.0582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="540" x="979" y="3700.8171">PrepareEmptyFrame(Mac::TxFrame &amp; aFrame, const Mac::Address &amp; aMacDest, bool aAckRequest) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3708.0401"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1338" x="979" y="3715.799">PrepareMacHeaders(Mac::TxFrame &amp; aFrame, Mac::Frame::Type aFrameType, const Mac::Addresses &amp; aMacAddr, const Mac::PanIds &amp; aPanIds, Mac::Frame::SecurityLevel aSecurityLevel, Mac::Frame::KeyIdMode aKeyIdMode, const Message * aMessage) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3723.0219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="979" y="3730.7809">PrepareNextDirectTransmission() : Message *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3738.0038"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="979" y="3745.7627">RemoveAgedMessages() : Error</text><ellipse cx="970" cy="3755.9857" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="979" y="3760.7446">RemoveDataResponseMessages() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3767.9676"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="979" y="3775.7265">RemoveMessageIfNoPendingTx(Message &amp; aMessage) : bool</text><ellipse cx="970" cy="3785.9495" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="979" y="3790.7084">RemoveMessages(Child &amp; aChild, Message::SubType aSubType) : void</text><ellipse cx="970" cy="3800.9314" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="979" y="3805.6903">ResetCounters() : void</text><ellipse cx="970" cy="3815.9133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="979" y="3820.6722">ResetTimeInQueueStat() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3827.8952"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="979" y="3835.6541">ResumeMessageTransmissions() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3842.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="979" y="3850.636">ScheduleTransmissionTask() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3857.8589"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="979" y="3865.6178">SendDestinationUnreachable(uint16_t aMeshSource, const Ip6::Headers &amp; aIp6Headers) : void</text><ellipse cx="970" cy="3875.8408" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="979" y="3880.5997">SendEmptyMessage() : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3887.8227"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="979" y="3895.5816">SendIcmpErrorIfDstUnreach(const Message &amp; aMessage, const Mac::Addresses &amp; aMacAddrs) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3902.8046"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="979" y="3910.5635">SendMesh(Message &amp; aMessage, Mac::TxFrame &amp; aFrame) : void</text><ellipse cx="970" cy="3920.7865" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="979" y="3925.5454">SendMessage(OwnedPtr&lt;Message&gt; aMessagePtr) : void</text><ellipse cx="970" cy="3935.7684" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="979" y="3940.5273">SetDiscoverParameters(const Mac::ChannelMask &amp; aScanChannels) : void</text><ellipse cx="970" cy="3950.7503" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="979" y="3955.5092">SetRxOnWhenIdle(bool aRxOnWhenIdle) : void</text><ellipse cx="970" cy="3965.7321" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="979" y="3970.4911">Start() : void</text><ellipse cx="970" cy="3980.714" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="979" y="3985.4729">Stop() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="3992.6959"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="979" y="4000.4548">UpdateEcnOrDrop(Message &amp; aMessage, bool aPreparingToSend) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4007.6778"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="811" x="979" y="4015.4367">UpdateFragmentPriority(Lowpan::FragmentHeader &amp; aFragmentHeader, uint16_t aFragmentLength, uint16_t aSrcRloc16, Message::Priority aPriority) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4022.6597"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="979" y="4030.4186">UpdateIp6Route(Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4037.6416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="979" y="4045.4005">UpdateIp6RouteFtd(const Ip6::Header &amp; aIp6Header, Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4052.6235"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="979" y="4060.3824">UpdateMeshRoute(Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4067.6054"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="979" y="4075.3643">UpdateNeighborLinkFailures(Neighbor &amp; aNeighbor, Error aError, bool aAllowNeighborRemove, uint8_t aFailLimit) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4082.5872"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="692" x="979" y="4090.3462">UpdateNeighborOnSentFrame(Mac::TxFrame &amp; aFrame, Error aError, const Mac::Address &amp; aMacDest, bool aIsDataPoll) : Neighbor *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4097.5691"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="979" y="4105.328">UpdateReassemblyList() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4112.551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="979" y="4120.3099">UpdateRoutes(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMeshAddrs) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4127.5329"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="979" y="4135.2918">UpdateSendMessage(Error aFrameTxError, Mac::Address &amp; aMacDest, Neighbor * aNeighbor) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="960" x2="2322" y1="4142.5148" y2="4142.5148"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4150.5148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="246" x="979" y="4158.2737">kFailedCslDataPollTransmissions : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4165.4967"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="223" x="979" y="4173.2556">kFailedRouterTransmissions : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4180.4786"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="217" x="979" y="4188.2375">kMeshHeaderFrameFcsSize : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4195.4605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="979" y="4203.2194">kMeshHeaderFrameMtu : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4210.4424"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="195" x="979" y="4218.2013">kMeshHeaderHopsLeft : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4225.4242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="186" x="979" y="4233.1832">kReassemblyTimeout : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4240.4061"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="979" y="4248.165">kTimeInQueueDropMsg : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4255.388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="979" y="4263.1469">kTimeInQueueMarkEcn : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4270.3699"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="979" y="4278.1288">kTxDelayInterval : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4285.3518"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="979" y="4293.1107">mAddMeshHeader : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4300.3337"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="979" y="4308.0926">mDataPollSender : DataPollSender</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4315.3156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="979" y="4323.0745">mDelayNextTx : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4330.2975"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="979" y="4338.0564">mEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4345.2793"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="979" y="4353.0383">mFragTag : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4360.2612"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="979" y="4368.0201">mFragmentPriorityList : FragmentPriorityList</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4375.2431"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="979" y="4383.002">mIndirectSender : IndirectSender</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4390.225"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="979" y="4397.9839">mIpCounters : otIpCounters</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4405.2069"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="979" y="4412.9658">mMacAddrs : Mac::Addresses</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4420.1888"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="979" y="4427.9477">mMeshDest : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4435.1707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="979" y="4442.9296">mMeshSource : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4450.1526"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="979" y="4457.9115">mMessageNextOffset : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4465.1344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="979" y="4472.8934">mReassemblyList : MessageQueue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4480.1163"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="979" y="4487.8752">mScheduleTransmissionTask : TxTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4495.0982"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="979" y="4502.8571">mSendBusy : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4510.0801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="979" y="4517.839">mSendMessage : Message *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4525.062"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="979" y="4532.8209">mSendQueue : PriorityQueue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4540.0439"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="979" y="4547.8028">mTxDelayTimer : TxDelayTimer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4555.0258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="979" y="4562.7847">mTxPaused : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967" y="4570.0077"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="979" y="4577.7666">mTxQueueStats : TxQueueStats</text><!--MD5=[95df13b2cf148589c0162fafb28ae08c]
class C_0000576691251651384823--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="48" id="C_0000576691251651384823" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="175" y="652"/><ellipse cx="190" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M192.9688,673.6406 Q192.3906,673.9375 191.75,674.0781 Q191.1094,674.2344 190.4063,674.2344 Q187.9063,674.2344 186.5781,672.5938 Q185.2656,670.9375 185.2656,667.8125 Q185.2656,664.6875 186.5781,663.0313 Q187.9063,661.375 190.4063,661.375 Q191.1094,661.375 191.75,661.5313 Q192.4063,661.6875 192.9688,661.9844 L192.9688,664.7031 Q192.3438,664.125 191.75,663.8594 Q191.1563,663.5781 190.5313,663.5781 Q189.1875,663.5781 188.5,664.6563 Q187.8125,665.7188 187.8125,667.8125 Q187.8125,669.9063 188.5,670.9844 Q189.1875,672.0469 190.5313,672.0469 Q191.1563,672.0469 191.75,671.7813 Q192.3438,671.5 192.9688,670.9219 L192.9688,673.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="154" x="204" y="672.656">NetworkData::NetworkData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="176" x2="360" y1="684" y2="684"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="176" x2="360" y1="692" y2="692"/><!--MD5=[2cf48a705139048ba6ec43b6d87a0e82]
class C_0000365511659643489006--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="48" id="C_0000365511659643489006" style="stroke: #A80036; stroke-width: 1.5;" width="115" x="1677.5" y="5016"/><ellipse cx="1692.5" cy="5032" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1695.4688,5037.6406 Q1694.8906,5037.9375 1694.25,5038.0781 Q1693.6094,5038.2344 1692.9063,5038.2344 Q1690.4063,5038.2344 1689.0781,5036.5938 Q1687.7656,5034.9375 1687.7656,5031.8125 Q1687.7656,5028.6875 1689.0781,5027.0313 Q1690.4063,5025.375 1692.9063,5025.375 Q1693.6094,5025.375 1694.25,5025.5313 Q1694.9063,5025.6875 1695.4688,5025.9844 L1695.4688,5028.7031 Q1694.8438,5028.125 1694.25,5027.8594 Q1693.6563,5027.5781 1693.0313,5027.5781 Q1691.6875,5027.5781 1691,5028.6563 Q1690.3125,5029.7188 1690.3125,5031.8125 Q1690.3125,5033.9063 1691,5034.9844 Q1691.6875,5036.0469 1693.0313,5036.0469 Q1693.6563,5036.0469 1694.25,5035.7813 Q1694.8438,5035.5 1695.4688,5034.9219 L1695.4688,5037.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="1706.5" y="5036.656">IndirectSender</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1678.5" x2="1791.5" y1="5048" y2="5048"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1678.5" x2="1791.5" y1="5056" y2="5056"/><!--MD5=[cf0a39651d445606eb194c0aa6ad89da]
class C_0002074607423113921391--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="1532.225" id="C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="1790.5" y="1255"/><ellipse cx="1943.75" cy="1271" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1946.7188,1276.6406 Q1946.1406,1276.9375 1945.5,1277.0781 Q1944.8594,1277.2344 1944.1563,1277.2344 Q1941.6563,1277.2344 1940.3281,1275.5938 Q1939.0156,1273.9375 1939.0156,1270.8125 Q1939.0156,1267.6875 1940.3281,1266.0313 Q1941.6563,1264.375 1944.1563,1264.375 Q1944.8594,1264.375 1945.5,1264.5313 Q1946.1563,1264.6875 1946.7188,1264.9844 L1946.7188,1267.7031 Q1946.0938,1267.125 1945.5,1266.8594 Q1944.9063,1266.5781 1944.2813,1266.5781 Q1942.9375,1266.5781 1942.25,1267.6563 Q1941.5625,1268.7188 1941.5625,1270.8125 Q1941.5625,1272.9063 1942.25,1273.9844 Q1942.9375,1275.0469 1944.2813,1275.0469 Q1944.9063,1275.0469 1945.5,1274.7813 Q1946.0938,1274.5 1946.7188,1273.9219 L1946.7188,1276.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="1964.25" y="1275.656">Instance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1791.5" x2="2152.5" y1="1287" y2="1287"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1791.5" x2="2152.5" y1="1295" y2="1295"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1303"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1810.5" y="1310.7589">Instance() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1791.5" x2="2152.5" y1="1317.9819" y2="1317.9819"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1325.9819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1810.5" y="1333.7408">AfterInit() : void</text><ellipse cx="1801.5" cy="1343.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1810.5" y="1348.7227">ErasePersistentInfo() : Error</text><ellipse cx="1801.5" cy="1358.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1810.5" y="1363.7046">FactoryReset() : void</text><ellipse cx="1801.5" cy="1373.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1810.5" y="1378.6865">Finalize() : void</text><ellipse cx="1801.5" cy="1388.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1810.5" y="1393.6684">Get&lt;Type&gt;() : Type &amp;</text><ellipse cx="1801.5" cy="1403.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="88" x="1810.5" y="1408.6502">Get() : Instance &amp;</text><ellipse cx="1801.5" cy="1418.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1810.5" y="1423.6321">GetApplicationCoap() : Coap::Coap &amp;</text><ellipse cx="1801.5" cy="1433.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1810.5" y="1438.614">GetApplicationCoapSecure() : Coap::CoapSecure &amp;</text><ellipse cx="1801.5" cy="1448.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1810.5" y="1453.5959">GetBufferInfo(BufferInfo &amp; aInfo) : void</text><ellipse cx="1801.5" cy="1463.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="1810.5" y="1468.5778">GetHeap() : Utils::Heap &amp;</text><ellipse cx="1801.5" cy="1478.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1810.5" y="1483.5597">GetId() const : uint32_t</text><ellipse cx="1801.5" cy="1493.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="1810.5" y="1498.5416">GetLogLevel() : LogLevel</text><ellipse cx="1801.5" cy="1508.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="120" x="1810.5" y="1513.5235">InitSingle() : Instance &amp;</text><ellipse cx="1801.5" cy="1523.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="209" x="1810.5" y="1528.5053">IsDnsNameCompressionEnabled() : bool</text><ellipse cx="1801.5" cy="1538.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1810.5" y="1543.4872">IsInitialized() const : bool</text><ellipse cx="1801.5" cy="1553.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1810.5" y="1558.4691">Reset() : void</text><ellipse cx="1801.5" cy="1568.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1810.5" y="1573.451">ResetBufferInfo() : void</text><ellipse cx="1801.5" cy="1583.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="290" x="1810.5" y="1588.4329">SetDnsNameCompressionEnabled(bool aEnabled) : void</text><ellipse cx="1801.5" cy="1598.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="1810.5" y="1603.4148">SetLogLevel(LogLevel aLogLevel) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1791.5" x2="2152.5" y1="1610.6378" y2="1610.6378"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1618.6378"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1810.5" y="1626.3967">mActiveDataset : MeshCoP::ActiveDatasetManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1633.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1810.5" y="1641.3786">mAddressResolver : AddressResolver</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1648.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1810.5" y="1656.3604">mAnnounceBegin : AnnounceBeginServer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1663.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="1810.5" y="1671.3423">mAnnounceSender : AnnounceSender</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1678.5653"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1810.5" y="1686.3242">mAnycastLocator : AnycastLocator</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1693.5472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1810.5" y="1701.3061">mApplicationBleSecure : Ble::BleSecure</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1708.5291"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1810.5" y="1716.288">mApplicationCoap : Coap::Coap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1723.511"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1810.5" y="1731.2699">mApplicationCoapSecure : Coap::CoapSecure</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1738.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1810.5" y="1746.2518">mBackboneRouterLeader : BackboneRouter::Leader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1753.4747"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1810.5" y="1761.2337">mBorderAgent : MeshCoP::BorderAgent</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1768.4566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1810.5" y="1776.2155">mChannelManager : Utils::ChannelManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1783.4385"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1810.5" y="1791.1974">mChannelMonitor : Utils::ChannelMonitor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1798.4204"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1810.5" y="1806.1793">mChildSupervisor : ChildSupervisor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1813.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1810.5" y="1821.1612">mCommissioner : MeshCoP::Commissioner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1828.3842"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1810.5" y="1836.1431">mDatasetUpdater : MeshCoP::DatasetUpdater</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1843.3661"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1810.5" y="1851.125">mDhcp6Client : Dhcp6::Client</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1858.348"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1810.5" y="1866.1069">mDhcp6Server : Dhcp6::Server</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1873.3298"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1810.5" y="1881.0888">mDiags : FactoryDiags::Diags</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1888.3117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1810.5" y="1896.0706">mDiscoverScanner : Mle::DiscoverScanner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1903.2936"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1810.5" y="1911.0525">mDnsClient : Dns::Client</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1918.2755"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1810.5" y="1926.0344">mDnsDso : Dns::Dso</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1933.2574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1810.5" y="1941.0163">mDnssdServer : Dns::ServiceDiscovery::Server</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1948.2393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1810.5" y="1955.9982">mDuaManager : DuaManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1963.2212"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1810.5" y="1970.9801">mEnergyScan : EnergyScanServer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1978.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="1810.5" y="1985.962">mExtendedPanIdManager : MeshCoP::ExtendedPanIdManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="1993.185"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1810.5" y="2000.9439">mHistoryTracker : Utils::HistoryTracker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2008.1668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="1810.5" y="2015.9258">mId : uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2023.1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1810.5" y="2030.9076">mIp6 : Ip6::Ip6</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2038.1306"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1810.5" y="2045.8895">mIp6Filter : Ip6::Filter</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2053.1125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1810.5" y="2060.8714">mIsInitialized : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2068.0944"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1810.5" y="2075.8533">mJamDetector : Utils::JamDetector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2083.0763"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1810.5" y="2090.8352">mJoiner : MeshCoP::Joiner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2098.0582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1810.5" y="2105.8171">mJoinerRouter : MeshCoP::JoinerRouter</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2113.0401"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1810.5" y="2120.799">mKeyManager : KeyManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2128.0219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1810.5" y="2135.7809">mLeader : MeshCoP::Leader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2143.0038"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1810.5" y="2150.7627">mLinkRaw : Mac::LinkRaw</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2157.9857"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1810.5" y="2165.7446">mLowpan : Lowpan::Lowpan</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2172.9676"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1810.5" y="2180.7265">mMac : Mac::Mac</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2187.9495"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1810.5" y="2195.7084">mMbedTls : Crypto::MbedTls</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2202.9314"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1810.5" y="2210.6903">mMeshForwarder : MeshForwarder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2217.9133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1810.5" y="2225.6722">mMessagePool : MessagePool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2232.8952"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1810.5" y="2240.6541">mMleRouter : Mle::MleRouter</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2247.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1810.5" y="2255.636">mMlrManager : MlrManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2262.8589"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="1810.5" y="2270.6178">mNeighborDiscoveryAgent : NeighborDiscovery::Agent</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2277.8408"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1810.5" y="2285.5997">mNetworkDataLeader : NetworkData::Leader</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2292.8227"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1810.5" y="2300.5816">mNetworkDataLocal : NetworkData::Local</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2307.8046"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1810.5" y="2315.5635">mNetworkDataNotifier : NetworkData::Notifier</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2322.7865"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="1810.5" y="2330.5454">mNetworkDataPublisher : NetworkData::Publisher</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2337.7684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1810.5" y="2345.5273">mNetworkDataServiceManager : NetworkData::Service::Manager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2352.7503"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="1810.5" y="2360.5092">mNetworkDiagnosticClient : NetworkDiagnostic::Client</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2367.7321"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1810.5" y="2375.4911">mNetworkDiagnosticServer : NetworkDiagnostic::Server</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2382.714"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1810.5" y="2390.4729">mNetworkNameManager : MeshCoP::NetworkNameManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2397.6959"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1810.5" y="2405.4548">mNotifier : Notifier</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2412.6778"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1810.5" y="2420.4367">mPanIdQuery : PanIdQueryServer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2427.6597"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1810.5" y="2435.4186">mPendingDataset : MeshCoP::PendingDatasetManager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2442.6416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1810.5" y="2450.4005">mPingSender : Utils::PingSender</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2457.6235"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1810.5" y="2465.3824">mPowerCalibration : Utils::PowerCalibration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2472.6054"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1810.5" y="2480.3643">mRadio : Radio</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2487.5872"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1810.5" y="2495.3462">mRandomManager : Random::Manager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2502.5691"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1810.5" y="2510.328">mSettings : Settings</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2517.551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1810.5" y="2525.3099">mSettingsDriver : SettingsDriver</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2532.5329"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1810.5" y="2540.2918">mSlaac : Utils::Slaac</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2547.5148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1810.5" y="2555.2737">mSntpClient : Sntp::Client</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2562.4967"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1810.5" y="2570.2556">mSrpClient : Srp::Client</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2577.4786"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1810.5" y="2585.2375">mSrpClientBuffers : Utils::SrpClientBuffers</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2592.4605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1810.5" y="2600.2194">mSrpServer : Srp::Server</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2607.4424"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1810.5" y="2615.2013">mSupervisionListener : SupervisionListener</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2622.4242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1810.5" y="2630.1832">mTaskletScheduler : Tasklet::Scheduler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2637.4061"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1810.5" y="2645.165">mThreadNetif : ThreadNetif</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2652.388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1810.5" y="2660.1469">mTimeTicker : TimeTicker</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2667.3699"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1810.5" y="2675.1288">mTimerMicroScheduler : TimerMicro::Scheduler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2682.3518"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1810.5" y="2690.1107">mTimerMilliScheduler : TimerMilli::Scheduler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2697.3337"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1810.5" y="2705.0926">mTmfAgent : Tmf::Agent</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2712.3156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1810.5" y="2720.0745">mTmfSecureAgent : Tmf::SecureAgent</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2727.2975"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1810.5" y="2735.0564">mUptime : Uptime</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2742.2793"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="1810.5" y="2750.0383">sDnsNameCompressionEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2757.2612"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="1810.5" y="2765.0201">sHeap : Utils::Heap *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1798.5" y="2772.2431"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="108" x="1810.5" y="2780.002">sLogLevel : LogLevel</text><!--MD5=[dabec9b676e82fd3645a7ac0b68a2c8b]
class C_0000603837953379726446--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="1636.0801" id="C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.5;" width="819" x="4134.5" y="5479"/><ellipse cx="4514.25" cy="5495" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4517.2188,5500.6406 Q4516.6406,5500.9375 4516,5501.0781 Q4515.3594,5501.2344 4514.6563,5501.2344 Q4512.1563,5501.2344 4510.8281,5499.5938 Q4509.5156,5497.9375 4509.5156,5494.8125 Q4509.5156,5491.6875 4510.8281,5490.0313 Q4512.1563,5488.375 4514.6563,5488.375 Q4515.3594,5488.375 4516,5488.5313 Q4516.6563,5488.6875 4517.2188,5488.9844 L4517.2188,5491.7031 Q4516.5938,5491.125 4516,5490.8594 Q4515.4063,5490.5781 4514.7813,5490.5781 Q4513.4375,5490.5781 4512.75,5491.6563 Q4512.0625,5492.7188 4512.0625,5494.8125 Q4512.0625,5496.9063 4512.75,5497.9844 Q4513.4375,5499.0469 4514.7813,5499.0469 Q4515.4063,5499.0469 4516,5498.7813 Q4516.5938,5498.5 4517.2188,5497.9219 L4517.2188,5500.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="4534.75" y="5499.656">Message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4135.5" x2="4952.5" y1="5511" y2="5511"/><ellipse cx="4145.5" cy="5522" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4154.5" y="5526.7589">AddLqi(uint8_t aLqi) : void</text><ellipse cx="4145.5" cy="5536.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4154.5" y="5541.7408">AddRss(int8_t aRss) : void</text><ellipse cx="4145.5" cy="5551.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="4154.5" y="5556.7227">Append&lt;ObjectType&gt;(const ObjectType &amp; aObject) : Error</text><ellipse cx="4145.5" cy="5566.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="4154.5" y="5571.7046">AppendBytes(const void * aBuf, uint16_t aLength) : Error</text><ellipse cx="4145.5" cy="5581.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="4154.5" y="5586.6865">AppendBytesFromMessage(const Message &amp; aMessage, uint16_t aOffset, uint16_t aLength) : Error</text><ellipse cx="4145.5" cy="5596.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="4154.5" y="5601.6684">AppendData&lt;DataLengthType kDataLengthType&gt;(const Data&lt;kDataLengthType&gt; &amp; aData) : Error</text><ellipse cx="4145.5" cy="5611.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4154.5" y="5616.6502">ClearChildMask(uint16_t aChildIndex) : void</text><ellipse cx="4145.5" cy="5626.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4154.5" y="5631.6321">ClearDirectTransmission() : void</text><ellipse cx="4145.5" cy="5641.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4154.5" y="5646.614">Clone() const : Message *</text><ellipse cx="4145.5" cy="5656.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4154.5" y="5661.5959">Clone(uint16_t aLength) const : Message *</text><ellipse cx="4145.5" cy="5671.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="4154.5" y="5676.5778">Compare&lt;ObjectType&gt;(uint16_t aOffset, const ObjectType &amp; aObject) const : _Bool</text><ellipse cx="4145.5" cy="5686.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="793" x="4154.5" y="5691.5597">CompareBytes(uint16_t aOffset, const Message &amp; aOtherMessage, uint16_t aOtherOffset, uint16_t aLength, ByteMatcher aMatcher = nullptr) const : bool</text><ellipse cx="4145.5" cy="5701.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="4154.5" y="5706.5416">CompareBytes(uint16_t aOffset, const void * aBuf, uint16_t aLength, ByteMatcher aMatcher = nullptr) const : bool</text><ellipse cx="4145.5" cy="5716.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="4154.5" y="5721.5235">Free() : void</text><ellipse cx="4145.5" cy="5731.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4154.5" y="5736.5053">GetAverageLqi() const : uint8_t</text><ellipse cx="4145.5" cy="5746.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4154.5" y="5751.4872">GetAverageRss() const : int8_t</text><ellipse cx="4145.5" cy="5761.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4154.5" y="5766.4691">GetBufferCount() const : uint8_t</text><ellipse cx="4145.5" cy="5776.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4154.5" y="5781.451">GetChannel() const : uint8_t</text><ellipse cx="4145.5" cy="5791.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="4154.5" y="5796.4329">GetChildMask(uint16_t aChildIndex) const : bool</text><ellipse cx="4145.5" cy="5806.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4154.5" y="5811.4148">GetDatagramTag() const : uint32_t</text><ellipse cx="4145.5" cy="5821.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4154.5" y="5826.3967">GetDoNotEvict() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="5833.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="426" x="4154.5" y="5841.3786">GetFirstChunk(uint16_t aOffset, uint16_t &amp; aLength, Chunk &amp; aChunk) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="5848.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="4154.5" y="5856.3604">GetFirstChunk(uint16_t aOffset, uint16_t &amp; aLength, MutableChunk &amp; aChunk) : void</text><ellipse cx="4145.5" cy="5866.5834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4154.5" y="5871.3423">GetInstance() const : Instance &amp;</text><ellipse cx="4145.5" cy="5881.5653" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4154.5" y="5886.3242">GetLength() const : uint16_t</text><ellipse cx="4145.5" cy="5896.5472" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4154.5" y="5901.3061">GetLinkInfo(ThreadLinkInfo &amp; aLinkInfo) const : Error</text><ellipse cx="4145.5" cy="5911.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="4154.5" y="5916.288">GetLqiAverager() const : const LqiAverager &amp;</text><ellipse cx="4145.5" cy="5926.511" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4154.5" y="5931.2699">GetMeshDest() const : uint16_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="5938.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="4154.5" y="5946.2518">GetMessagePool() const : MessagePool *</text><ellipse cx="4145.5" cy="5956.4747" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="4154.5" y="5961.2337">GetMessageQueue() const : MessageQueue *</text><ellipse cx="4145.5" cy="5971.4566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4154.5" y="5976.2155">GetMulticastLoop() const : bool</text><ellipse cx="4145.5" cy="5986.4385" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4154.5" y="5991.1974">GetNext() const : Message *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="5998.4204"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4154.5" y="6006.1793">GetNextChunk(uint16_t &amp; aLength, MutableChunk &amp; aChunk) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6013.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="4154.5" y="6021.1612">GetNextChunk(uint16_t &amp; aLength, Chunk &amp; aChunk) const : void</text><ellipse cx="4145.5" cy="6031.3842" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4154.5" y="6036.1431">GetOffset() const : uint16_t</text><ellipse cx="4145.5" cy="6046.3661" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4154.5" y="6051.125">GetOrigin() const : Origin</text><ellipse cx="4145.5" cy="6061.348" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4154.5" y="6066.1069">GetPanId() const : uint16_t</text><ellipse cx="4145.5" cy="6076.3298" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4154.5" y="6081.0888">GetPriority() const : Priority</text><ellipse cx="4145.5" cy="6091.3117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4154.5" y="6096.0706">GetPriorityQueue() const : PriorityQueue *</text><ellipse cx="4145.5" cy="6106.2936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4154.5" y="6111.0525">GetPsduCount() const : uint8_t</text><polygon fill="#FFFF44" points="4145.5,6116.2755,4149.5,6120.2755,4145.5,6124.2755,4141.5,6120.2755" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4154.5" y="6126.0344">GetReserved() const : uint16_t</text><ellipse cx="4145.5" cy="6136.2574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4154.5" y="6141.0163">GetRssAverager() const : const RssAverager &amp;</text><ellipse cx="4145.5" cy="6151.2393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4154.5" y="6155.9982">GetSubType() const : SubType</text><ellipse cx="4145.5" cy="6166.2212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4154.5" y="6170.9801">GetTimestamp() const : TimeMilli</text><ellipse cx="4145.5" cy="6181.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4154.5" y="6185.962">GetTxSuccess() const : bool</text><ellipse cx="4145.5" cy="6196.185" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4154.5" y="6200.9439">GetType() const : Type</text><ellipse cx="4145.5" cy="6211.1668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="4154.5" y="6215.9258">InsertHeader(uint16_t aOffset, uint16_t aLength) : Error</text><ellipse cx="4145.5" cy="6226.1487" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4154.5" y="6230.9076">IsChildPending() const : bool</text><ellipse cx="4145.5" cy="6241.1306" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4154.5" y="6245.8895">IsDirectTransmission() const : bool</text><ellipse cx="4145.5" cy="6256.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4154.5" y="6260.8714">IsDstPanIdBroadcast() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6268.0944"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4154.5" y="6275.8533">IsInAQueue() const : bool</text><ellipse cx="4145.5" cy="6286.0763" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4154.5" y="6290.8352">IsLinkSecurityEnabled() const : bool</text><ellipse cx="4145.5" cy="6301.0582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4154.5" y="6305.8171">IsLoopbackToHostAllowed() const : bool</text><ellipse cx="4145.5" cy="6316.0401" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4154.5" y="6320.799">IsOriginHostTrusted() const : bool</text><ellipse cx="4145.5" cy="6331.0219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4154.5" y="6335.7809">IsOriginHostUntrusted() const : bool</text><ellipse cx="4145.5" cy="6346.0038" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4154.5" y="6350.7627">IsOriginThreadNetif() const : bool</text><ellipse cx="4145.5" cy="6360.9857" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4154.5" y="6365.7446">IsResolvingAddress() const : bool</text><ellipse cx="4145.5" cy="6375.9676" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4154.5" y="6380.7265">IsSubTypeMle() const : bool</text><ellipse cx="4145.5" cy="6390.9495" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4154.5" y="6395.7084">IsTimeSync() const : bool</text><ellipse cx="4145.5" cy="6405.9314" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4154.5" y="6410.6903">MoveOffset(int aDelta) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6417.9133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4154.5" y="6425.6722">Next() : Message *&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6432.8952"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4154.5" y="6440.6541">Next() const : Message *const &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6447.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="214" x="4154.5" y="6455.636">NextOf(Message * aMessage) : Message *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6462.8589"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="276" x="4154.5" y="6470.6178">NextOf(const Message * aMessage) : const Message *</text><ellipse cx="4145.5" cy="6480.8408" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4154.5" y="6485.5997">Prepend&lt;ObjectType&gt;(const ObjectType &amp; aObject) : Error</text><ellipse cx="4145.5" cy="6495.8227" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="4154.5" y="6500.5816">PrependBytes(const void * aBuf, uint16_t aLength) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6507.8046"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4154.5" y="6515.5635">Prev() : Message *&amp;</text><ellipse cx="4145.5" cy="6525.7865" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="4154.5" y="6530.5454">PriorityToString(Priority aPriority) : const char *</text><ellipse cx="4145.5" cy="6540.7684" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="4154.5" y="6545.5273">Read&lt;ObjectType&gt;(uint16_t aOffset, ObjectType &amp; aObject) const : Error</text><ellipse cx="4145.5" cy="6555.7503" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="4154.5" y="6560.5092">Read(uint16_t aOffset, void * aBuf, uint16_t aLength) const : Error</text><ellipse cx="4145.5" cy="6570.7321" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="4154.5" y="6575.4911">ReadBytes(uint16_t aOffset, void * aBuf, uint16_t aLength) const : uint16_t</text><ellipse cx="4145.5" cy="6585.714" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4154.5" y="6590.4729">RemoveHeader(uint16_t aOffset, uint16_t aLength) : void</text><ellipse cx="4145.5" cy="6600.6959" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="4154.5" y="6605.4548">RemoveHeader(uint16_t aLength) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6612.6778"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4154.5" y="6620.4367">ResizeMessage(uint16_t aLength) : Error</text><ellipse cx="4145.5" cy="6630.6597" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4154.5" y="6635.4186">SetChannel(uint8_t aChannel) : void</text><ellipse cx="4145.5" cy="6645.6416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4154.5" y="6650.4005">SetChildMask(uint16_t aChildIndex) : void</text><ellipse cx="4145.5" cy="6660.6235" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4154.5" y="6665.3824">SetDatagramTag(uint32_t aTag) : void</text><ellipse cx="4145.5" cy="6675.6054" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4154.5" y="6680.3643">SetDirectTransmission() : void</text><ellipse cx="4145.5" cy="6690.5872" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="4154.5" y="6695.3462">SetDoNotEvict(bool aDoNotEvict) : void</text><ellipse cx="4145.5" cy="6705.5691" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4154.5" y="6710.328">SetLength(uint16_t aLength) : Error</text><ellipse cx="4145.5" cy="6720.551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="4154.5" y="6725.3099">SetLinkSecurityEnabled(bool aEnabled) : void</text><ellipse cx="4145.5" cy="6735.5329" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="4154.5" y="6740.2918">SetLoopbackToHostAllowed(bool aAllowLoopbackToHost) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6747.5148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4154.5" y="6755.2737">SetLqiAverager(const LqiAverager &amp; aLqiAverager) : void</text><ellipse cx="4145.5" cy="6765.4967" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4154.5" y="6770.2556">SetMeshDest(uint16_t aMeshDest) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6777.4786"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="4154.5" y="6785.2375">SetMessagePool(MessagePool * aMessagePool) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6792.4605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4154.5" y="6800.2194">SetMessageQueue(MessageQueue * aMessageQueue) : void</text><ellipse cx="4145.5" cy="6810.4424" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="4154.5" y="6815.2013">SetMulticastLoop(bool aMulticastLoop) : void</text><ellipse cx="4145.5" cy="6825.4242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4154.5" y="6830.1832">SetOffset(uint16_t aOffset) : void</text><ellipse cx="4145.5" cy="6840.4061" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4154.5" y="6845.165">SetOrigin(Origin aOrigin) : void</text><ellipse cx="4145.5" cy="6855.388" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4154.5" y="6860.1469">SetPanId(uint16_t aPanId) : void</text><ellipse cx="4145.5" cy="6870.3699" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4154.5" y="6875.1288">SetPriority(Priority aPriority) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6882.3518"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4154.5" y="6890.1107">SetPriorityQueue(PriorityQueue * aPriorityQueue) : void</text><polygon fill="#FFFF44" points="4145.5,6895.3337,4149.5,6899.3337,4145.5,6903.3337,4141.5,6899.3337" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4154.5" y="6905.0926">SetReserved(uint16_t aReservedHeader) : void</text><ellipse cx="4145.5" cy="6915.3156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4154.5" y="6920.0745">SetResolvingAddress(bool aResolvingAddress) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4142.5" y="6927.2975"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="4154.5" y="6935.0564">SetRssAverager(const RssAverager &amp; aRssAverager) : void</text><ellipse cx="4145.5" cy="6945.2793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4154.5" y="6950.0383">SetSubType(SubType aSubType) : void</text><ellipse cx="4145.5" cy="6960.2612" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4154.5" y="6965.0201">SetTimestamp(TimeMilli aTimestamp) : void</text><ellipse cx="4145.5" cy="6975.2431" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4154.5" y="6980.002">SetTimestampToNow() : void</text><ellipse cx="4145.5" cy="6990.225" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="4154.5" y="6994.9839">SetTxSuccess(bool aTxSuccess) : void</text><ellipse cx="4145.5" cy="7005.2069" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4154.5" y="7009.9658">SetType(Type aType) : void</text><ellipse cx="4145.5" cy="7020.1888" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="4154.5" y="7024.9477">UpdateLinkInfoFrom(const ThreadLinkInfo &amp; aLinkInfo) : void</text><ellipse cx="4145.5" cy="7035.1707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4154.5" y="7039.9296">Write&lt;ObjectType&gt;(uint16_t aOffset, const ObjectType &amp; aObject) : void</text><ellipse cx="4145.5" cy="7050.1526" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="4154.5" y="7054.9115">WriteBytes(uint16_t aOffset, const void * aBuf, uint16_t aLength) : void</text><ellipse cx="4145.5" cy="7065.1344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="634" x="4154.5" y="7069.8934">WriteBytesFromMessage(uint16_t aWriteOffset, const Message &amp; aMessage, uint16_t aReadOffset, uint16_t aLength) : void</text><ellipse cx="4145.5" cy="7080.1163" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="575" x="4154.5" y="7084.8752">WriteData&lt;DataLengthType kDataLengthType&gt;(uint16_t aOffset, const Data&lt;kDataLengthType&gt; &amp; aData) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4135.5" x2="4952.5" y1="7092.0982" y2="7092.0982"/><ellipse cx="4145.5" cy="7103.0982" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="155" x="4154.5" y="7107.8571">kNumPriorities : const uint8_t</text><!--MD5=[87fa827c1e343817e86ddfbe8d4efc3e]
class C_0000970679022985562567--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="182.837" id="C_0000970679022985562567" style="stroke: #A80036; stroke-width: 1.5;" width="291" x="4133.5" y="4948.5"/><ellipse cx="4243.25" cy="4964.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4246.2188,4970.1406 Q4245.6406,4970.4375 4245,4970.5781 Q4244.3594,4970.7344 4243.6563,4970.7344 Q4241.1563,4970.7344 4239.8281,4969.0938 Q4238.5156,4967.4375 4238.5156,4964.3125 Q4238.5156,4961.1875 4239.8281,4959.5313 Q4241.1563,4957.875 4243.6563,4957.875 Q4244.3594,4957.875 4245,4958.0313 Q4245.6563,4958.1875 4246.2188,4958.4844 L4246.2188,4961.2031 Q4245.5938,4960.625 4245,4960.3594 Q4244.4063,4960.0781 4243.7813,4960.0781 Q4242.4375,4960.0781 4241.75,4961.1563 Q4241.0625,4962.2188 4241.0625,4964.3125 Q4241.0625,4966.4063 4241.75,4967.4844 Q4242.4375,4968.5469 4243.7813,4968.5469 Q4244.4063,4968.5469 4245,4968.2813 Q4245.5938,4968 4246.2188,4967.4219 L4246.2188,4970.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="4263.75" y="4969.156">FrameData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4134.5" x2="4423.5" y1="4980.5" y2="4980.5"/><ellipse cx="4144.5" cy="4991.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4153.5" y="4996.2589">CanRead(uint16_t aLength) const : bool</text><ellipse cx="4144.5" cy="5006.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="4153.5" y="5011.2408">Read&lt;ObjectType&gt;(ObjectType &amp; aObject) : Error</text><ellipse cx="4144.5" cy="5021.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4153.5" y="5026.2227">ReadBigEndianUint16(uint16_t &amp; aUint16) : Error</text><ellipse cx="4144.5" cy="5036.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4153.5" y="5041.2046">ReadBigEndianUint32(uint32_t &amp; aUint32) : Error</text><ellipse cx="4144.5" cy="5051.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4153.5" y="5056.1865">ReadBytes(void * aBuffer, uint16_t aLength) : Error</text><ellipse cx="4144.5" cy="5066.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4153.5" y="5071.1684">ReadLittleEndianUint16(uint16_t &amp; aUint16) : Error</text><ellipse cx="4144.5" cy="5081.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4153.5" y="5086.1502">ReadLittleEndianUint32(uint32_t &amp; aUint32) : Error</text><ellipse cx="4144.5" cy="5096.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4153.5" y="5101.1321">ReadUint8(uint8_t &amp; aUint8) : Error</text><ellipse cx="4144.5" cy="5111.3551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4153.5" y="5116.114">SkipOver(uint16_t aLength) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4134.5" x2="4423.5" y1="5123.337" y2="5123.337"/><!--MD5=[6c4bd14df83ef8ef52b89df32dc0cf12]
class C_0001613647999044296420--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="407.5653" id="C_0001613647999044296420" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="4459.5" y="4836"/><ellipse cx="4684.75" cy="4852" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4687.7188,4857.6406 Q4687.1406,4857.9375 4686.5,4858.0781 Q4685.8594,4858.2344 4685.1563,4858.2344 Q4682.6563,4858.2344 4681.3281,4856.5938 Q4680.0156,4854.9375 4680.0156,4851.8125 Q4680.0156,4848.6875 4681.3281,4847.0313 Q4682.6563,4845.375 4685.1563,4845.375 Q4685.8594,4845.375 4686.5,4845.5313 Q4687.1563,4845.6875 4687.7188,4845.9844 L4687.7188,4848.7031 Q4687.0938,4848.125 4686.5,4847.8594 Q4685.9063,4847.5781 4685.2813,4847.5781 Q4683.9375,4847.5781 4683.25,4848.6563 Q4682.5625,4849.7188 4682.5625,4851.8125 Q4682.5625,4853.9063 4683.25,4854.9844 Q4683.9375,4856.0469 4685.2813,4856.0469 Q4685.9063,4856.0469 4686.5,4855.7813 Q4687.0938,4855.5 4687.7188,4854.9219 L4687.7188,4857.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="4705.25" y="4856.656">FrameBuilder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4460.5" x2="4993.5" y1="4868" y2="4868"/><ellipse cx="4470.5" cy="4879" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="4479.5" y="4883.7589">Append&lt;ObjectType&gt;(const ObjectType &amp; aObject) : Error</text><ellipse cx="4470.5" cy="4893.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4479.5" y="4898.7408">AppendBigEndianUint16(uint16_t aUint16) : Error</text><ellipse cx="4470.5" cy="4908.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4479.5" y="4913.7227">AppendBigEndianUint32(uint32_t aUint32) : Error</text><ellipse cx="4470.5" cy="4923.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="4479.5" y="4928.7046">AppendBytes(const void * aBuffer, uint16_t aLength) : Error</text><ellipse cx="4470.5" cy="4938.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="4479.5" y="4943.6865">AppendBytesFromMessage(const Message &amp; aMessage, uint16_t aOffset, uint16_t aLength) : Error</text><ellipse cx="4470.5" cy="4953.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4479.5" y="4958.6684">AppendLittleEndianUint16(uint16_t aUint16) : Error</text><ellipse cx="4470.5" cy="4968.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4479.5" y="4973.6502">AppendLittleEndianUint32(uint32_t aUint32) : Error</text><ellipse cx="4470.5" cy="4983.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="4479.5" y="4988.6321">AppendMacAddress(const Mac::Address &amp; aMacAddress) : Error</text><ellipse cx="4470.5" cy="4998.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4479.5" y="5003.614">AppendUint8(uint8_t aUint8) : Error</text><ellipse cx="4470.5" cy="5013.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4479.5" y="5018.5959">CanAppend(uint16_t aLength) const : bool</text><ellipse cx="4470.5" cy="5028.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4479.5" y="5033.5778">GetBytes() const : const uint8_t *</text><ellipse cx="4470.5" cy="5043.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4479.5" y="5048.5597">GetLength() const : uint16_t</text><ellipse cx="4470.5" cy="5058.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4479.5" y="5063.5416">GetMaxLength() const : uint16_t</text><ellipse cx="4470.5" cy="5073.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="4479.5" y="5078.5235">GetRemainingLength() const : uint16_t</text><ellipse cx="4470.5" cy="5088.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4479.5" y="5093.5053">Init(void * aBuffer, uint16_t aLength) : void</text><ellipse cx="4470.5" cy="5103.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="4479.5" y="5108.4872">Insert&lt;ObjectType&gt;(uint16_t aOffset, const ObjectType &amp; aObject) : Error</text><ellipse cx="4470.5" cy="5118.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="4479.5" y="5123.4691">InsertBytes(uint16_t aOffset, const void * aBuffer, uint16_t aLength) : Error</text><ellipse cx="4470.5" cy="5133.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4479.5" y="5138.451">RemoveBytes(uint16_t aOffset, uint16_t aLength) : void</text><ellipse cx="4470.5" cy="5148.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4479.5" y="5153.4329">SetMaxLength(uint16_t aLength) : void</text><ellipse cx="4470.5" cy="5163.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4479.5" y="5168.4148">Write&lt;ObjectType&gt;(uint16_t aOffset, const ObjectType &amp; aObject) : void</text><ellipse cx="4470.5" cy="5178.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="4479.5" y="5183.3967">WriteBytes(uint16_t aOffset, const void * aBuffer, uint16_t aLength) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4460.5" x2="4993.5" y1="5190.6196" y2="5190.6196"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4467.5" y="5198.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4479.5" y="5206.3786">mBuffer : uint8_t *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4467.5" y="5213.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4479.5" y="5221.3604">mLength : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4467.5" y="5228.5834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4479.5" y="5236.3423">mMaxLength : uint16_t</text><!--MD5=[46c291f064a5f75eb494507c891df4d6]
class C_0001739458148921928763--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="152.8732" id="C_0001739458148921928763" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="4269.5" y="7903.5"/><ellipse cx="4355.75" cy="7919.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4358.7188,7925.1406 Q4358.1406,7925.4375 4357.5,7925.5781 Q4356.8594,7925.7344 4356.1563,7925.7344 Q4353.6563,7925.7344 4352.3281,7924.0938 Q4351.0156,7922.4375 4351.0156,7919.3125 Q4351.0156,7916.1875 4352.3281,7914.5313 Q4353.6563,7912.875 4356.1563,7912.875 Q4356.8594,7912.875 4357.5,7913.0313 Q4358.1563,7913.1875 4358.7188,7913.4844 L4358.7188,7916.2031 Q4358.0938,7915.625 4357.5,7915.3594 Q4356.9063,7915.0781 4356.2813,7915.0781 Q4354.9375,7915.0781 4354.25,7916.1563 Q4353.5625,7917.2188 4353.5625,7919.3125 Q4353.5625,7921.4063 4354.25,7922.4844 Q4354.9375,7923.5469 4356.2813,7923.5469 Q4356.9063,7923.5469 4357.5,7923.2813 Q4358.0938,7923 4358.7188,7922.4219 L4358.7188,7925.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="4376.25" y="7924.156">ThreadLinkInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4270.5" x2="4533.5" y1="7935.5" y2="7935.5"/><ellipse cx="4280.5" cy="7946.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4289.5" y="7951.2589">GetChannel() const : uint8_t</text><ellipse cx="4280.5" cy="7961.4819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4289.5" y="7966.2408">GetLqi() const : uint8_t</text><ellipse cx="4280.5" cy="7976.4638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4289.5" y="7981.2227">GetPanId() const : Mac::PanId</text><ellipse cx="4280.5" cy="7991.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4289.5" y="7996.2046">GetRss() const : int8_t</text><ellipse cx="4280.5" cy="8006.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4289.5" y="8011.1865">IsDstPanIdBroadcast() const : bool</text><ellipse cx="4280.5" cy="8021.4094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4289.5" y="8026.1684">IsLinkSecurityEnabled() const : bool</text><ellipse cx="4280.5" cy="8036.3913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4289.5" y="8041.1502">SetFrom(const Mac::RxFrame &amp; aFrame) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4270.5" x2="4533.5" y1="8048.3732" y2="8048.3732"/><!--MD5=[74880f3c072891bad702bfe9634465f5]
class C_0002099165682465547464--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="752.1487" id="C_0002099165682465547464" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="3411" y="4664"/><ellipse cx="3525.75" cy="4680" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3528.7188,4685.6406 Q3528.1406,4685.9375 3527.5,4686.0781 Q3526.8594,4686.2344 3526.1563,4686.2344 Q3523.6563,4686.2344 3522.3281,4684.5938 Q3521.0156,4682.9375 3521.0156,4679.8125 Q3521.0156,4676.6875 3522.3281,4675.0313 Q3523.6563,4673.375 3526.1563,4673.375 Q3526.8594,4673.375 3527.5,4673.5313 Q3528.1563,4673.6875 3528.7188,4673.9844 L3528.7188,4676.7031 Q3528.0938,4676.125 3527.5,4675.8594 Q3526.9063,4675.5781 3526.2813,4675.5781 Q3524.9375,4675.5781 3524.25,4676.6563 Q3523.5625,4677.7188 3523.5625,4679.8125 Q3523.5625,4681.9063 3524.25,4682.9844 Q3524.9375,4684.0469 3526.2813,4684.0469 Q3526.9063,4684.0469 3527.5,4683.7813 Q3528.0938,4683.5 3528.7188,4682.9219 L3528.7188,4685.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="3546.25" y="4684.656">Ip6::Header</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3412" x2="3714" y1="4696" y2="4696"/><ellipse cx="3422" cy="4707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3431" y="4711.7589">GetDestination() const : const Address &amp;</text><ellipse cx="3422" cy="4721.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3431" y="4726.7408">GetDestination() : Address &amp;</text><ellipse cx="3422" cy="4736.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3431" y="4741.7227">GetDscp() const : uint8_t</text><ellipse cx="3422" cy="4751.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3431" y="4756.7046">GetEcn() const : Ecn</text><ellipse cx="3422" cy="4766.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3431" y="4771.6865">GetFlow() const : uint32_t</text><ellipse cx="3422" cy="4781.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3431" y="4786.6684">GetHopLimit() const : uint8_t</text><ellipse cx="3422" cy="4796.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3431" y="4801.6502">GetNextHeader() const : uint8_t</text><ellipse cx="3422" cy="4811.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3431" y="4816.6321">GetPayloadLength() const : uint16_t</text><ellipse cx="3422" cy="4826.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3431" y="4831.614">GetSource() const : const Address &amp;</text><ellipse cx="3422" cy="4841.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3431" y="4846.5959">GetSource() : Address &amp;</text><ellipse cx="3422" cy="4856.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3431" y="4861.5778">GetTrafficClass() const : uint8_t</text><ellipse cx="3422" cy="4871.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3431" y="4876.5597">GetVerionTrafficClassFlow() const : uint32_t</text><ellipse cx="3422" cy="4886.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3431" y="4891.5416">InitVersionTrafficClassFlow() : void</text><ellipse cx="3422" cy="4901.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3431" y="4906.5235">IsValid() const : bool</text><ellipse cx="3422" cy="4916.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3431" y="4921.5053">IsVersion6() const : bool</text><ellipse cx="3422" cy="4931.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="3431" y="4936.4872">ParseFrom(const Message &amp; aMessage) : Error</text><ellipse cx="3422" cy="4946.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="3431" y="4951.4691">SetDestination(const Address &amp; aDestination) : void</text><ellipse cx="3422" cy="4961.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3431" y="4966.451">SetDscp(uint8_t aDscp) : void</text><ellipse cx="3422" cy="4976.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3431" y="4981.4329">SetEcn(Ecn aEcn) : void</text><ellipse cx="3422" cy="4991.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3431" y="4996.4148">SetFlow(uint32_t aFlow) : void</text><ellipse cx="3422" cy="5006.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3431" y="5011.3967">SetHopLimit(uint8_t aHopLimit) : void</text><ellipse cx="3422" cy="5021.6196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3431" y="5026.3786">SetNextHeader(uint8_t aNextHeader) : void</text><ellipse cx="3422" cy="5036.6015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3431" y="5041.3604">SetPayloadLength(uint16_t aLength) : void</text><ellipse cx="3422" cy="5051.5834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3431" y="5056.3423">SetSource(const Address &amp; aSource) : void</text><ellipse cx="3422" cy="5066.5653" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3431" y="5071.3242">SetTrafficClass(uint8_t aTc) : void</text><ellipse cx="3422" cy="5081.5472" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="3431" y="5086.3061">SetVerionTrafficClassFlow(uint32_t aVerTcFlow) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3412" x2="3714" y1="5093.5291" y2="5093.5291"/><ellipse cx="3422" cy="5104.5291" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="3431" y="5109.288">kDestinationFieldOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5116.511"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="140" x="3431" y="5124.2699">kDscpMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5131.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="3431" y="5139.2518">kDscpOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5146.4747"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="3431" y="5154.2337">kEcnMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5161.4566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="3431" y="5169.2155">kEcnOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5176.4385"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="140" x="3431" y="5184.1974">kFlowMask : const uint32_t</text><ellipse cx="3422" cy="5194.4204" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="3431" y="5199.1793">kHopLimitFieldOffset : const uint8_t</text><ellipse cx="3422" cy="5209.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="3431" y="5214.1612">kNextHeaderFieldOffset : const uint8_t</text><ellipse cx="3422" cy="5224.3842" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="218" x="3431" y="5229.1431">kPayloadLengthFieldOffset : const uint8_t</text><ellipse cx="3422" cy="5239.3661" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="3431" y="5244.125">kSourceFieldOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5251.348"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="3431" y="5259.1069">kTrafficClassMask : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5266.3298"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="173" x="3431" y="5274.0888">kTrafficClassOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5281.3117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="165" x="3431" y="5289.0706">kVersTcFlowInit : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5296.2936"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="128" x="3431" y="5304.0525">kVersion6 : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5311.2755"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="3431" y="5319.0344">kVersionMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5326.2574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3431" y="5334.0163">mDestination : Address</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5341.2393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3431" y="5348.9982">mHopLimit : uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5356.2212"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3431" y="5363.9801">mNextHeader : uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5371.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3431" y="5378.962">mPayloadLength : uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5386.185"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3431" y="5393.9439">mSource : Address</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3419" y="5401.1668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="3431" y="5408.9258">mVerTcFlow : Header::(anonymous_428478)</text><!--MD5=[9ef2dba83634ac868a13c7d0d8701e93]
class C_0001018498121270593936--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="790.1125" id="C_0001018498121270593936" style="stroke: #A80036; stroke-width: 1.5;" width="1005" x="3060.5" y="3330.5"/><ellipse cx="3537.75" cy="3346.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3540.7188,3352.1406 Q3540.1406,3352.4375 3539.5,3352.5781 Q3538.8594,3352.7344 3538.1563,3352.7344 Q3535.6563,3352.7344 3534.3281,3351.0938 Q3533.0156,3349.4375 3533.0156,3346.3125 Q3533.0156,3343.1875 3534.3281,3341.5313 Q3535.6563,3339.875 3538.1563,3339.875 Q3538.8594,3339.875 3539.5,3340.0313 Q3540.1563,3340.1875 3540.7188,3340.4844 L3540.7188,3343.2031 Q3540.0938,3342.625 3539.5,3342.3594 Q3538.9063,3342.0781 3538.2813,3342.0781 Q3536.9375,3342.0781 3536.25,3343.1563 Q3535.5625,3344.2188 3535.5625,3346.3125 Q3535.5625,3348.4063 3536.25,3349.4844 Q3536.9375,3350.5469 3538.2813,3350.5469 Q3538.9063,3350.5469 3539.5,3350.2813 Q3540.0938,3350 3540.7188,3349.4219 L3540.7188,3352.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="42" x="3558.25" y="3351.156">Ip6::Ip6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3061.5" x2="4064.5" y1="3362.5" y2="3362.5"/><ellipse cx="3071.5" cy="3373.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3080.5" y="3378.2589">Ip6(Instance &amp; aInstance) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3061.5" x2="4064.5" y1="3385.4819" y2="3385.4819"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3393.4819"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="3080.5" y="3401.2408">AddMplOption(Message &amp; aMessage, Header &amp; aHeader) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3408.4638"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="3080.5" y="3416.2227">CleanupFragmentationBuffer() : void</text><ellipse cx="3071.5" cy="3426.4457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="254" x="3080.5" y="3431.2046">DscpToPriority(uint8_t aDscp) : Message::Priority</text><ellipse cx="3071.5" cy="3441.4276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="186" x="3080.5" y="3446.1865">EcnToString(Ecn aEcn) : const char *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3453.4094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="3080.5" y="3461.1684">EnqueueDatagram(Message &amp; aMessage) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3468.3913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="3080.5" y="3476.1502">FragmentDatagram(Message &amp; aMessage, uint8_t aIpProto) : Error</text><ellipse cx="3071.5" cy="3486.3732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3080.5" y="3491.1321">GetSendQueue() const : const PriorityQueue &amp;</text><ellipse cx="3071.5" cy="3501.3551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="3080.5" y="3506.114">HandleDatagram(OwnedPtr&lt;Message&gt; aMessagePtr, bool aIsReassembled = false) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3513.337"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="841" x="3080.5" y="3521.0959">HandleExtensionHeaders(OwnedPtr&lt;Message&gt; &amp; aMessagePtr, MessageInfo &amp; aMessageInfo, Header &amp; aHeader, uint8_t &amp; aNextHeader, bool &amp; aReceive) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3528.3189"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="3080.5" y="3536.0778">HandleFragment(Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3543.3008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="3080.5" y="3551.0597">HandleOptions(Message &amp; aMessage, Header &amp; aHeader, bool &amp; aReceive) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3558.2827"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="912" x="3080.5" y="3566.0416">HandlePayload(Header &amp; aIp6Header, OwnedPtr&lt;Message&gt; &amp; aMessagePtr, MessageInfo &amp; aMessageInfo, uint8_t aIpProto, Message::Ownership aMessageOwnership) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3573.2645"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3080.5" y="3581.0235">HandleSendQueue() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3588.2464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3080.5" y="3596.0053">HandleTimeTick() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3603.2283"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="3080.5" y="3610.9872">InsertMplOption(Message &amp; aMessage, Header &amp; aHeader) : Error</text><ellipse cx="3071.5" cy="3621.2102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="3080.5" y="3625.9691">IpProtoToString(uint8_t aIpProto) : const char *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3633.1921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3080.5" y="3640.951">IsOnLink(const Address &amp; aAddress) const : bool</text><ellipse cx="3071.5" cy="3651.174" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="3080.5" y="3655.9329">IsReceiveIp6FilterEnabled() const : bool</text><ellipse cx="3071.5" cy="3666.1559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="3080.5" y="3670.9148">NewMessage(uint16_t aReserved) : Message *</text><ellipse cx="3071.5" cy="3681.1378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="3080.5" y="3685.8967">NewMessage() : Message *</text><ellipse cx="3071.5" cy="3696.1196" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="3080.5" y="3700.8786">NewMessage(uint16_t aReserved, const Message::Settings &amp; aSettings) : Message *</text><ellipse cx="3071.5" cy="3711.1015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="608" x="3080.5" y="3715.8604">NewMessageFromData(const uint8_t * aData, uint16_t aDataLength, const Message::Settings &amp; aSettings) : Message *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3723.0834"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="979" x="3080.5" y="3730.8423">PassToHost(OwnedPtr&lt;Message&gt; &amp; aMessagePtr, const MessageInfo &amp; aMessageInfo, uint8_t aIpProto, bool aApplyFilter, bool aReceive, Message::Ownership aMessageOwnership) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3738.0653"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="3080.5" y="3745.8242">PrepareMulticastToLargerThanRealmLocal(Message &amp; aMessage, const Header &amp; aHeader) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3753.0472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="269" x="3080.5" y="3760.8061">PriorityToDscp(Message::Priority aPriority) : uint8_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3768.0291"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3080.5" y="3775.788">RemoveMplOption(Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3783.011"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="3080.5" y="3790.7699">RouteLookup(const Address &amp; aSource, const Address &amp; aDestination) const : Error</text><ellipse cx="3071.5" cy="3800.9929" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="3080.5" y="3805.7518">SelectSourceAddress(MessageInfo &amp; aMessageInfo) const : Error</text><ellipse cx="3071.5" cy="3815.9747" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="3080.5" y="3820.7337">SelectSourceAddress(const Address &amp; aDestination) const : const Address *</text><ellipse cx="3071.5" cy="3830.9566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="3080.5" y="3835.7155">SendDatagram(Message &amp; aMessage, MessageInfo &amp; aMessageInfo, uint8_t aIpProto) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3842.9385"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="566" x="3080.5" y="3850.6974">SendIcmpError(Message &amp; aMessage, Icmp::Header::Type aIcmpType, Icmp::Header::Code aIcmpCode) : void</text><ellipse cx="3071.5" cy="3860.9204" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3080.5" y="3865.6793">SendRaw(OwnedPtr&lt;Message&gt; aMessage) : Error</text><ellipse cx="3071.5" cy="3875.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="481" x="3080.5" y="3880.6612">SetReceiveDatagramCallback(otIp6ReceiveCallback aCallback, void * aCallbackContext) : void</text><ellipse cx="3071.5" cy="3890.8842" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3080.5" y="3895.6431">SetReceiveIp6FilterEnabled(bool aEnabled) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3902.8661"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="775" x="3080.5" y="3910.625">TakeOrCopyMessagePtr(OwnedPtr&lt;Message&gt; &amp; aTargetPtr, OwnedPtr&lt;Message&gt; &amp; aMessagePtr, Message::Ownership aMessageOwnership) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3917.848"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3080.5" y="3925.6069">UpdateReassemblyList() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3061.5" x2="4064.5" y1="3932.8298" y2="3932.8298"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3940.8298"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="3080.5" y="3948.5888">kDefaultHopLimit : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3955.8117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="203" x="3080.5" y="3963.5706">kIp6ReassemblyTimeout : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3970.7936"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="3080.5" y="3978.5525">kMinimalMtu : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="3985.7755"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3080.5" y="3993.5344">mIcmp : Icmp</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4000.7574"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3080.5" y="4008.5163">mIsReceiveIp6FilterEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4015.7393"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3080.5" y="4023.4982">mMpl : Mpl</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4030.7212"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3080.5" y="4038.4801">mReassemblyList : MessageQueue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4045.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="3080.5" y="4053.462">mReceiveIp6DatagramCallback : Callback&lt;otIp6ReceiveCallback&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4060.685"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3080.5" y="4068.4439">mSendQueue : PriorityQueue</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4075.6668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3080.5" y="4083.4258">mSendQueueTask : SendQueueTask</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4090.6487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="3080.5" y="4098.4076">mTcp : Tcp</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3068.5" y="4105.6306"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="3080.5" y="4113.3895">mUdp : Udp</text><!--MD5=[40b257a41ea8db5138df9c0a32478837]
class C_0000274617637055195381--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="332.6559" id="C_0000274617637055195381" style="stroke: #A80036; stroke-width: 1.5;" width="629" x="2396.5" y="3559"/><ellipse cx="2670.75" cy="3575" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2673.7188,3580.6406 Q2673.1406,3580.9375 2672.5,3581.0781 Q2671.8594,3581.2344 2671.1563,3581.2344 Q2668.6563,3581.2344 2667.3281,3579.5938 Q2666.0156,3577.9375 2666.0156,3574.8125 Q2666.0156,3571.6875 2667.3281,3570.0313 Q2668.6563,3568.375 2671.1563,3568.375 Q2671.8594,3568.375 2672.5,3568.5313 Q2673.1563,3568.6875 2673.7188,3568.9844 L2673.7188,3571.7031 Q2673.0938,3571.125 2672.5,3570.8594 Q2671.9063,3570.5781 2671.2813,3570.5781 Q2669.9375,3570.5781 2669.25,3571.6563 Q2668.5625,3572.7188 2668.5625,3574.8125 Q2668.5625,3576.9063 2669.25,3577.9844 Q2669.9375,3579.0469 2671.2813,3579.0469 Q2671.9063,3579.0469 2672.5,3578.7813 Q2673.0938,3578.5 2673.7188,3577.9219 L2673.7188,3580.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="2691.25" y="3579.656">Ip6::Headers</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2397.5" x2="3024.5" y1="3591" y2="3591"/><ellipse cx="2407.5" cy="3602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="2416.5" y="3606.7589">DecompressFrom(const Message &amp; aMessage, uint16_t aOffset, const Mac::Addresses &amp; aMacAddrs) : Error</text><ellipse cx="2407.5" cy="3616.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="603" x="2416.5" y="3621.7408">DecompressFrom(const FrameData &amp; aFrameData, const Mac::Addresses &amp; aMacAddrs, Instance &amp; aInstance) : Error</text><ellipse cx="2407.5" cy="3631.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2416.5" y="3636.7227">GetChecksum() const : uint16_t</text><ellipse cx="2407.5" cy="3646.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2416.5" y="3651.7046">GetDestinationAddress() const : const Address &amp;</text><ellipse cx="2407.5" cy="3661.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2416.5" y="3666.6865">GetDestinationPort() const : uint16_t</text><ellipse cx="2407.5" cy="3676.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2416.5" y="3681.6684">GetEcn() const : Ecn</text><ellipse cx="2407.5" cy="3691.8913" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="2416.5" y="3696.6502">GetIcmpHeader() const : const Icmp::Header &amp;</text><ellipse cx="2407.5" cy="3706.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2416.5" y="3711.6321">GetIp6Header() const : const Header &amp;</text><ellipse cx="2407.5" cy="3721.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2416.5" y="3726.614">GetIpProto() const : uint8_t</text><ellipse cx="2407.5" cy="3736.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2416.5" y="3741.5959">GetSourceAddress() const : const Address &amp;</text><ellipse cx="2407.5" cy="3751.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2416.5" y="3756.5778">GetSourcePort() const : uint16_t</text><ellipse cx="2407.5" cy="3766.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2416.5" y="3771.5597">GetTcpHeader() const : const Tcp::Header &amp;</text><ellipse cx="2407.5" cy="3781.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2416.5" y="3786.5416">GetUdpHeader() const : const Udp::Header &amp;</text><ellipse cx="2407.5" cy="3796.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="2416.5" y="3801.5235">IsIcmp6() const : bool</text><ellipse cx="2407.5" cy="3811.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2416.5" y="3816.5053">IsTcp() const : bool</text><ellipse cx="2407.5" cy="3826.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2416.5" y="3831.4872">IsUdp() const : bool</text><ellipse cx="2407.5" cy="3841.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2416.5" y="3846.4691">ParseFrom(const Message &amp; aMessage) : Error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2397.5" x2="3024.5" y1="3853.6921" y2="3853.6921"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2404.5" y="3861.6921"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2416.5" y="3869.451">mHeader : Headers::(anonymous_488478)</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2404.5" y="3876.674"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="2416.5" y="3884.4329">mIp6Header : Header</text><!--MD5=[bb5036fdb0d4126175e8526da1aca6e3]
class C_0002066399530883052289--><rect fill="#FEFECE" filter="url(#f1mvd7dabg6f5h)" height="1516.225" id="C_0002066399530883052289" style="stroke: #A80036; stroke-width: 1.5;" width="644" x="5051" y="7222"/><ellipse cx="5325.75" cy="7238" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5328.7188,7243.6406 Q5328.1406,7243.9375 5327.5,7244.0781 Q5326.8594,7244.2344 5326.1563,7244.2344 Q5323.6563,7244.2344 5322.3281,7242.5938 Q5321.0156,7240.9375 5321.0156,7237.8125 Q5321.0156,7234.6875 5322.3281,7233.0313 Q5323.6563,7231.375 5326.1563,7231.375 Q5326.8594,7231.375 5327.5,7231.5313 Q5328.1563,7231.6875 5328.7188,7231.9844 L5328.7188,7234.7031 Q5328.0938,7234.125 5327.5,7233.8594 Q5326.9063,7233.5781 5326.2813,7233.5781 Q5324.9375,7233.5781 5324.25,7234.6563 Q5323.5625,7235.7188 5323.5625,7237.8125 Q5323.5625,7239.9063 5324.25,7240.9844 Q5324.9375,7242.0469 5326.2813,7242.0469 Q5326.9063,7242.0469 5327.5,7241.7813 Q5328.0938,7241.5 5328.7188,7240.9219 L5328.7188,7243.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="5346.25" y="7242.656">Coap::Message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5052" x2="5694" y1="7254" y2="7254"/><ellipse cx="5062" cy="7265" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="5071" y="7269.7589">AppendBlockOption(BlockType aType, uint32_t aNum, bool aMore, otCoapBlockSzx aSize) : Error</text><ellipse cx="5062" cy="7279.9819" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="5071" y="7284.7408">AppendContentFormatOption(otCoapOptionContentFormat aContentFormat) : Error</text><ellipse cx="5062" cy="7294.9638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5071" y="7299.7227">AppendMaxAgeOption(uint32_t aMaxAge) : Error</text><ellipse cx="5062" cy="7309.9457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5071" y="7314.7046">AppendObserveOption(uint32_t aObserve) : Error</text><ellipse cx="5062" cy="7324.9276" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="5071" y="7329.6865">AppendOption(uint16_t aNumber, uint16_t aLength, const void * aValue) : Error</text><ellipse cx="5062" cy="7339.9094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="618" x="5071" y="7344.6684">AppendOptionFromMessage(uint16_t aNumber, uint16_t aLength, const Message &amp; aMessage, uint16_t aOffset) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="7351.8913"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5071" y="7359.6502">AppendOptionHeader(uint16_t aNumber, uint16_t aLength) : Error</text><ellipse cx="5062" cy="7369.8732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="5071" y="7374.6321">AppendProxyUriOption(const char * aProxyUri) : Error</text><ellipse cx="5062" cy="7384.8551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="5071" y="7389.614">AppendStringOption(uint16_t aNumber, const char * aValue) : Error</text><ellipse cx="5062" cy="7399.837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5071" y="7404.5959">AppendUintOption(uint16_t aNumber, uint32_t aValue) : Error</text><ellipse cx="5062" cy="7414.8189" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="5071" y="7419.5778">AppendUriPathOptions(const char * aUriPath) : Error</text><ellipse cx="5062" cy="7429.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5071" y="7434.5597">AppendUriQueryOption(const char * aUriQuery) : Error</text><ellipse cx="5062" cy="7444.7827" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5071" y="7449.5416">Clone(uint16_t aLength) const : Message *</text><ellipse cx="5062" cy="7459.7645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5071" y="7464.5235">Clone() const : Message *</text><ellipse cx="5062" cy="7474.7464" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5071" y="7479.5053">CodeToString() const : const char *</text><ellipse cx="5062" cy="7489.7283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="5071" y="7494.4872">Finish() : void</text><ellipse cx="5062" cy="7504.7102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5071" y="7509.4691">GenerateRandomToken(uint8_t aTokenLength) : Error</text><ellipse cx="5062" cy="7519.6921" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="5071" y="7524.451">GetBlockWiseBlockNumber() const : uint32_t</text><ellipse cx="5062" cy="7534.674" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5071" y="7539.4329">GetBlockWiseBlockSize() const : otCoapBlockSzx</text><ellipse cx="5062" cy="7549.6559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5071" y="7554.4148">GetCode() const : uint8_t</text><ellipse cx="5062" cy="7564.6378" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5071" y="7569.3967">GetHeaderLength() const : uint16_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="7576.6196"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5071" y="7584.3786">GetHelpData() : HelpData &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="7591.6015"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="5071" y="7599.3604">GetHelpData() const : const HelpData &amp;</text><ellipse cx="5062" cy="7609.5834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="171" x="5071" y="7614.3423">GetHelpDataReserved() : uint16_t</text><ellipse cx="5062" cy="7624.5653" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5071" y="7629.3242">GetMessageId() const : uint16_t</text><ellipse cx="5062" cy="7639.5472" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="5071" y="7644.3061">GetNextCoapMessage() const : const Message *</text><ellipse cx="5062" cy="7654.5291" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="5071" y="7659.288">GetNextCoapMessage() : Message *</text><ellipse cx="5062" cy="7669.511" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5071" y="7674.2699">GetOptionStart() const : uint16_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="7681.4929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5071" y="7689.2518">GetToken() : uint8_t *</text><ellipse cx="5062" cy="7699.4747" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="5071" y="7704.2337">GetToken() const : const uint8_t *</text><ellipse cx="5062" cy="7714.4566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5071" y="7719.2155">GetTokenLength() const : uint8_t</text><ellipse cx="5062" cy="7729.4385" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5071" y="7734.1974">GetType() const : uint8_t</text><ellipse cx="5062" cy="7744.4204" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5071" y="7749.1793">GetUriPath(char * aUriPath) const : Error</text><ellipse cx="5062" cy="7759.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5071" y="7764.1612">GetVersion() const : uint8_t</text><ellipse cx="5062" cy="7774.3842" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5071" y="7779.1431">Init(Type aType, Code aCode, Uri aUri) : Error</text><ellipse cx="5062" cy="7789.3661" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="5071" y="7794.125">Init() : void</text><ellipse cx="5062" cy="7804.348" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="5071" y="7809.1069">Init(Type aType, Code aCode) : void</text><ellipse cx="5062" cy="7819.3298" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="5071" y="7824.0888">InitAsPost(const Ip6::Address &amp; aDestination, Uri aUri) : Error</text><ellipse cx="5062" cy="7834.3117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5071" y="7839.0706">IsAck() const : bool</text><ellipse cx="5062" cy="7849.2936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5071" y="7854.0525">IsConfirmable() const : bool</text><ellipse cx="5062" cy="7864.2755" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5071" y="7869.0344">IsConfirmablePostRequest() const : bool</text><ellipse cx="5062" cy="7879.2574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5071" y="7884.0163">IsDeleteRequest() const : bool</text><ellipse cx="5062" cy="7894.2393" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5071" y="7898.9982">IsEmpty() const : bool</text><ellipse cx="5062" cy="7909.2212" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5071" y="7913.9801">IsGetRequest() const : bool</text><ellipse cx="5062" cy="7924.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5071" y="7928.962">IsMoreBlocksFlagSet() const : bool</text><ellipse cx="5062" cy="7939.185" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5071" y="7943.9439">IsNonConfirmable() const : bool</text><ellipse cx="5062" cy="7954.1668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5071" y="7958.9258">IsNonConfirmablePostRequest() const : bool</text><ellipse cx="5062" cy="7969.1487" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5071" y="7973.9076">IsPostRequest() const : bool</text><ellipse cx="5062" cy="7984.1306" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5071" y="7988.8895">IsPutRequest() const : bool</text><ellipse cx="5062" cy="7999.1125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5071" y="8003.8714">IsRequest() const : bool</text><ellipse cx="5062" cy="8014.0944" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5071" y="8018.8533">IsReset() const : bool</text><ellipse cx="5062" cy="8029.0763" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5071" y="8033.8352">IsResponse() const : bool</text><ellipse cx="5062" cy="8044.0582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5071" y="8048.8171">IsTokenEqual(const Message &amp; aMessage) const : bool</text><ellipse cx="5062" cy="8059.0401" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5071" y="8063.799">ParseHeader() : Error</text><ellipse cx="5062" cy="8074.0219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5071" y="8078.7809">ReadBlockOptionValues(uint16_t aBlockType) : Error</text><ellipse cx="5062" cy="8089.0038" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5071" y="8093.7627">ReadUriPathOptions(char (&amp;)[33] aUriPath) const : Error</text><ellipse cx="5062" cy="8103.9857" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="5071" y="8108.7446">SetBlockWiseBlockNumber(uint32_t aBlockNumber) : void</text><ellipse cx="5062" cy="8118.9676" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="5071" y="8123.7265">SetBlockWiseBlockSize(otCoapBlockSzx aBlockSize) : void</text><ellipse cx="5062" cy="8133.9495" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5071" y="8138.7084">SetCode(Code aCode) : void</text><ellipse cx="5062" cy="8148.9314" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5071" y="8153.6903">SetDefaultResponseHeader(const Message &amp; aRequest) : Error</text><ellipse cx="5062" cy="8163.9133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5071" y="8168.6722">SetMessageId(uint16_t aMessageId) : void</text><ellipse cx="5062" cy="8178.8952" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5071" y="8183.6541">SetMoreBlocksFlag(bool aMoreBlocks) : void</text><ellipse cx="5062" cy="8193.877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5071" y="8198.636">SetPayloadMarker() : Error</text><ellipse cx="5062" cy="8208.8589" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5071" y="8213.6178">SetToken(const uint8_t * aToken, uint8_t aTokenLength) : Error</text><ellipse cx="5062" cy="8223.8408" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="5071" y="8228.5997">SetTokenFromMessage(const Message &amp; aMessage) : Error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8235.8227"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="5071" y="8243.5816">SetTokenLength(uint8_t aTokenLength) : void</text><ellipse cx="5062" cy="8253.8046" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5071" y="8258.5635">SetType(Type aType) : void</text><ellipse cx="5062" cy="8268.7865" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="5071" y="8273.5454">SetVersion(uint8_t aVersion) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8280.7684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="5071" y="8288.5273">WriteExtendedOptionField(uint16_t aValue, uint8_t *&amp; aBuffer) : uint8_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5052" x2="5694" y1="8295.7503" y2="8295.7503"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8303.7503"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="5071" y="8311.5092">kBlockMOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8318.7321"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="163" x="5071" y="8326.4911">kBlockNumMax : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8333.714"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="5071" y="8341.4729">kBlockNumOffset : const uint8_t</text><ellipse cx="5062" cy="8351.6959" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="5071" y="8356.4548">kBlockSzxBase : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8363.6778"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="5071" y="8371.4367">kBlockSzxOffset : const uint8_t</text><ellipse cx="5062" cy="8381.6597" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="189" x="5071" y="8386.4186">kDefaultTokenLength : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8393.6416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="5071" y="8401.4005">kHelpDataAlignment : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8408.6235"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="185" x="5071" y="8416.3824">kMaxHeaderLength : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8423.6054"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="5071" y="8431.3643">kMaxOptionHeaderSize : const uint8_t</text><ellipse cx="5062" cy="8441.5872" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="190" x="5071" y="8446.3462">kMaxReceivedUriPath : const uint8_t</text><ellipse cx="5062" cy="8456.5691" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="173" x="5071" y="8461.328">kMaxTokenLength : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8468.551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="5071" y="8476.3099">kMinHeaderLength : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8483.5329"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="5071" y="8491.2918">kObserveMask : const uint32_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8498.5148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="5071" y="8506.2737">kOption1ByteExtension : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8513.4967"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="237" x="5071" y="8521.2556">kOption1ByteExtensionOffset : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8528.4786"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="5071" y="8536.2375">kOption2ByteExtension : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8543.4605"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="237" x="5071" y="8551.2194">kOption2ByteExtensionOffset : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8558.4424"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="173" x="5071" y="8566.2013">kOptionDeltaMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8573.4242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="5071" y="8581.1832">kOptionDeltaOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8588.4061"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="5071" y="8596.165">kOptionLengthMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8603.388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="5071" y="8611.1469">kOptionLengthOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8618.3699"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="5071" y="8626.1288">kPayloadMarker : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8633.3518"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="5071" y="8641.1107">kTokenLengthMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8648.3337"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="5071" y="8656.0926">kTokenLengthOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8663.3156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="5071" y="8671.0745">kTypeMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8678.2975"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="5071" y="8686.0564">kTypeOffset : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8693.2793"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="128" x="5071" y="8701.0383">kVersion1 : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8708.2612"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="5071" y="8716.0201">kVersionMask : const uint8_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5059" y="8723.2431"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="154" x="5071" y="8731.002">kVersionOffset : const uint8_t</text><polygon fill="#FFFFFF" filter="url(#f1mvd7dabg6f5h)" points="62,647,126,647,133,672.0679,140,672.0679,140,705.1358,62,705.1358,62,647" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="62" x2="133" y1="672.0679" y2="672.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="58" x="66" y="663.9659">instance</text><!--MD5=[07823e81ea5dd99f4462244bd0725c91]
link C_0001332924320389650839 to C_0002074607423113921391--><path d="M1271.39,1176.13 C1448.71,1389.71 1646.75,1628.24 1786.91,1797.06 " fill="none" id="C_0001332924320389650839-&gt;C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1790.21,1801.04,1787.5247,1791.5643,1787.0105,1797.1977,1781.377,1796.6835,1790.21,1801.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[310056349bc2b132e874d9a562ab40b1]
reverse link C_0002074607423113921391 to C_0001332924320389650839--><path d="M1782.18,1785.14 C1649.82,1621.99 1468.67,1399.92 1307,1206 C1298.8,1196.16 1290.5,1186.23 1282.13,1176.22 " fill="none" id="C_0002074607423113921391&lt;-C_0001332924320389650839" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1790.43,1795.31,1789.7536,1788.1307,1782.8664,1785.9938,1783.5428,1793.1731,1790.43,1795.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310" y="1213.353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="1320" y="1220.897">mLowpan</text><!--MD5=[59c1cd5f976edffdaab352199801e6c4]
link C_0001332924320389650839 to C_0000970679022985562567--><path d="M1318.5,1167.59 C1324.63,1170.51 1330.79,1173.32 1337,1176 C1408.69,1206.96 4092.5,1151.07 4148,1206 C4214.73,1272.04 4211.85,4491.39 4219,4585 C4228.49,4709.29 4248.86,4851.63 4263.23,4943.29 " fill="none" id="C_0001332924320389650839-&gt;C_0000970679022985562567" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4264.03,4948.43,4266.5675,4938.9136,4263.2451,4943.492,4258.6667,4940.1696,4264.03,4948.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[92cfb26a91572591c6b5501325595690]
link C_0001332924320389650839 to C_0000603837953379726446--><path d="M1318.63,1167.29 C1324.72,1170.31 1330.84,1173.21 1337,1176 C1427.04,1216.71 3028.82,1204.9 3114,1255 C3838.8,1681.27 3875.32,2057.41 4106,2866 C4145.23,3003.51 4082.87,5300.89 4116,5440 C4121.08,5461.32 4126.77,5482.71 4132.99,5504.12 " fill="none" id="C_0001332924320389650839-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4134.41,5508.98,4135.73,5499.22,4133.01,5504.18,4128.05,5501.46,4134.41,5508.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[61d87392b05de9a43f28f774ce8391b6]
link C_0001332924320389650839 to C_0001613647999044296420--><path d="M1318.5,1167.59 C1324.63,1170.51 1330.79,1173.32 1337,1176 C1480.99,1238.19 4023.02,1129.62 4160,1206 C4313.76,1291.74 4242.02,2612.33 4264,2787 C4359.79,3548.16 4572.72,4435.77 4672.91,4830.92 " fill="none" id="C_0001332924320389650839-&gt;C_0001613647999044296420" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4674.16,4835.84,4675.8241,4826.1327,4672.9305,4830.9935,4668.0697,4828.0999,4674.16,4835.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[131c24c6a42fd6c0d918e2e8cba93c28]
link C_0001332924320389650839 to C_0002099165682465547464--><path d="M1318.84,1166.85 C1324.86,1170.01 1330.91,1173.06 1337,1176 C1672.32,1337.82 1827.68,1110.93 2171,1255 C3195.65,1684.96 3614.41,1858.43 4083,2866 C4123.27,2952.59 4122.51,4498.06 4083,4585 C4008.89,4748.09 3844.04,4875.51 3719.68,4953.31 " fill="none" id="C_0001332924320389650839-&gt;C_0002099165682465547464" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3715.27,4956.06,3725.0241,4954.6968,3719.514,4953.4164,3720.7943,4947.9064,3715.27,4956.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47c1404379a156ed86460d3892961c9a]
link C_0001332924320389650839 to C_0001346570432467457356--><path d="M857,1176.13 C857,1476.32 857,1825.8 857,1961.75 " fill="none" id="C_0001332924320389650839-&gt;C_0001346570432467457356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="857,1966.89,861,1957.89,857,1961.89,853,1957.89,857,1966.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[405b17f19a2baea96f7d1f5bce889597]
link C_0001265256160105741077 to C_0000970679022985562567--><path d="M1668.03,880.23 C1709.73,988.11 1778.25,1111.42 1886,1176 C1942.02,1209.57 4190.86,1159.78 4237,1206 C4508.31,1477.8 4324.5,4375.72 4285.73,4942.99 " fill="none" id="C_0001265256160105741077-&gt;C_0000970679022985562567" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4285.37,4948.34,4289.978,4939.6356,4285.713,4943.3518,4281.9969,4939.0868,4285.37,4948.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[904362e072891b4dbe72c8a45a5e17a8]
link C_0001265256160105741077 to C_0000603837953379726446--><path d="M1668.02,880.24 C1709.72,988.12 1778.24,1111.43 1886,1176 C1943.24,1210.3 4221.52,1200.29 4288,1206 C4425.23,1217.78 4480.74,1176.63 4594,1255 C4916,1477.8 5031,1628.44 5031,2020 C5031,2020 5031,2020 5031,5041 C5031,5218.53 5060.03,5269.09 5012,5440 C4996.71,5494.41 4977.46,5549.18 4955.53,5603.29 " fill="none" id="C_0001265256160105741077-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4953.54,5608.18,4960.64,5601.3544,4955.4265,5603.5495,4953.2313,5598.336,4953.54,5608.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[155f0c1c73406370e465c472457ca073]
link C_0001265256160105741077 to C_0001613647999044296420--><path d="M1668.03,880.23 C1709.72,988.11 1778.24,1111.42 1886,1176 C1942.38,1209.79 4188.66,1188.44 4252,1206 C4293.65,1217.54 4312.57,1218.68 4336,1255 C5088.22,2421.26 4868.99,4222.43 4766.29,4830.43 " fill="none" id="C_0001265256160105741077-&gt;C_0001613647999044296420" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4765.38,4835.75,4770.8399,4827.5531,4766.2228,4830.8215,4762.9543,4826.2045,4765.38,4835.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8fa7cc4f26240b0e41a5af6143933edc]
link C_0000603590511880671658 to C_0000970679022985562567--><path d="M2321.17,4585.24 C2346.34,4610.36 2366.52,4627.45 2380,4634 C2465,4675.32 4000.49,4614.49 4081,4664 C4180.25,4725.03 4232.46,4853.92 4257.85,4943.44 " fill="none" id="C_0000603590511880671658-&gt;C_0000970679022985562567" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4259.27,4948.47,4260.678,4938.7223,4257.9134,4943.6576,4252.9781,4940.8929,4259.27,4948.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[af1455f56110f0fa97e658c26080542c]
link C_0000603590511880671658 to C_0001739458148921928763--><path d="M1518.44,4585.04 C1512.08,4867.71 1543.27,5176.8 1660,5440 C2228.65,6722.13 3792.32,7649.47 4264.93,7906.9 " fill="none" id="C_0000603590511880671658-&gt;C_0001739458148921928763" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4269.41,7909.34,4263.4243,7901.5187,4265.0205,7906.9457,4259.5935,7908.5419,4269.41,7909.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e80c21ed627299ec5bfd4713cc26a81a]
link C_0000603590511880671658 to C_0000274617637055195381--><path d="M2323.07,3725.5 C2345.73,3725.5 2368.39,3725.5 2391.05,3725.5 " fill="none" id="C_0000603590511880671658-&gt;C_0000274617637055195381" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2396.19,3725.5,2387.19,3721.5,2391.19,3725.5,2387.19,3729.5,2396.19,3725.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c949ca10ea52695cfb2546ba0ca270c0]
link C_0000603590511880671658 to C_0002099165682465547464--><path d="M2289.34,4585.22 C2310.54,4602.25 2332.1,4618.56 2354,4634 C2685.52,4867.71 3161.87,4974.35 3405.86,5016.09 " fill="none" id="C_0000603590511880671658-&gt;C_0002099165682465547464" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3410.87,5016.94,3402.6731,5011.4801,3405.9415,5016.0972,3401.3245,5019.3657,3410.87,5016.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a0a69579be502390fc549101bc9cbc2]
link C_0000603590511880671658 to C_0000603837953379726446--><path d="M1862.57,4585.13 C1970.06,4944.66 2103.31,5309.36 2231,5440 C2746.63,5967.55 3615.82,6172.72 4129.15,6250.5 " fill="none" id="C_0000603590511880671658-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4134.42,6251.29,4126.1122,6246.0004,4129.4752,6250.549,4124.9266,6253.912,4134.42,6251.29" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2234" y="5037.853"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="95" x="2244" y="5045.397">mSendMessage</text><!--MD5=[eccd5a0471b827fad5f5d46b90cee13b]
reverse link C_0000603590511880671658 to C_0000365511659643489006--><path d="M1703.42,4598.09 C1717.27,4791.43 1729.11,4956.72 1733.34,5015.81 " fill="none" id="C_0000603590511880671658&lt;-C_0000365511659643489006" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1702.49,4585.01,1698.9291,4591.2806,1703.3478,4596.9793,1706.9087,4590.7087,1702.49,4585.01" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1708" y="4622.353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="100" x="1718" y="4629.897">mIndirectSender</text><!--MD5=[cd1700613e46d4b0f28f34628a13c6ae]
reverse link C_0000603590511880671658 to C_0001018498121270593936--><path d="M2327.78,2976.07 C2335.14,2972.59 2342.55,2969.24 2350,2966 C2632.49,2843.26 2770.55,2822.35 3043,2966 C3192.93,3045.05 3307.88,3188.97 3391.1,3330.43 " fill="none" id="C_0000603590511880671658&lt;-C_0001018498121270593936" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2323.2,2978.25,2333.0451,2977.9787,2327.7114,2976.0942,2329.5959,2970.7605,2323.2,2978.25" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2759.5" cy="2827.353" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="49" x="2766.5" y="2831.897">«friend»</text><!--MD5=[67478cf5a3951aab99f19aa213f82454]
reverse link C_0000603590511880671658 to C_0002074607423113921391--><path d="M1850.19,2860.79 C1851.82,2852.49 1853.42,2844.23 1855,2836 C1858.09,2819.88 1861.15,2803.56 1864.15,2787.09 " fill="none" id="C_0000603590511880671658&lt;-C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1849.17,2865.96,1854.8212,2857.8938,1850.1286,2861.0527,1846.9696,2856.3601,1849.17,2865.96" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1861" cy="2827.353" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="49" x="1868" y="2831.897">«friend»</text><!--MD5=[e4a173b20cbba95f18b92b6633a419e5]
reverse link C_0002074607423113921391 to C_0000603590511880671658--><path d="M1786.86,2568.06 C1763.54,2650.76 1742.22,2735.63 1726,2817 C1722.79,2833.1 1719.7,2849.39 1716.73,2865.82 " fill="none" id="C_0002074607423113921391&lt;-C_0000603590511880671658" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1790.46,2555.34,1784.9769,2560.0235,1787.1912,2566.8862,1792.6743,2562.2027,1790.46,2555.34" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1729" y="2824.353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="107" x="1739" y="2831.897">mMeshForwarder</text><!--MD5=[e329f20c0c1dc15d588e25cb1e32252a]
link C_0000603837953379726446 to C_0002074607423113921391--><path d="M4134.38,6265.74 C3625.9,6203.79 2777.33,6015.04 2380,5440 C2339.35,5381.17 2356.16,2935.88 2341,2866 C2303.2,2691.78 2228.35,2509.25 2155.88,2358.68 " fill="none" id="C_0000603837953379726446-&gt;C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2153.52,2353.79,2153.8288,2363.634,2155.6929,2358.2931,2161.0338,2360.1573,2153.52,2353.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed059124b509f41e3d13f3b9aa3e730c]
link C_0000603837953379726446 to C_0001739458148921928763--><path d="M4474.98,7115.11 C4448.24,7431.65 4421.12,7752.63 4408.82,7898.25 " fill="none" id="C_0000603837953379726446-&gt;C_0001739458148921928763" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4408.39,7903.35,4413.1482,7894.7268,4408.8194,7898.3685,4405.1778,7894.0397,4408.39,7903.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a62af20424b69fef144dfa119fb5361]
link C_0001613647999044296420 to C_0000603837953379726446--><path d="M4697.39,5244.03 C4687.65,5310.86 4676.14,5389.78 4663.88,5473.88 " fill="none" id="C_0001613647999044296420-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4663.15,5478.91,4668.3961,5470.5746,4663.8651,5473.9614,4660.4783,5469.4304,4663.15,5478.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f53d837d4b835c54731c9020991e3441]
link C_0002099165682465547464 to C_0000603837953379726446--><path d="M3715.2,5235.72 C3826.73,5378.39 3983.74,5579.25 4131.15,5767.83 " fill="none" id="C_0002099165682465547464-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4134.41,5772.01,4132.0348,5762.4519,4131.3373,5768.0655,4125.7236,5767.3681,4134.41,5772.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7181f9919252f5cdb70d4e63b6fbe16c]
link C_0001018498121270593936 to C_0000603837953379726446--><path d="M3659.69,4120.7 C3752.11,4474.91 3904.46,5005.94 4089,5449 C4102.61,5481.68 4117.09,5514.75 4132.2,5547.94 " fill="none" id="C_0001018498121270593936-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4134.43,5552.84,4134.3472,5542.9915,4132.361,5548.2882,4127.0643,5546.3019,4134.43,5552.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c2ae4214fba6ef8170ac5b5935854a9]
link C_0001018498121270593936 to C_0002099165682465547464--><path d="M3563,4120.74 C3563,4291.03 3563,4489.49 3563,4658.25 " fill="none" id="C_0001018498121270593936-&gt;C_0002099165682465547464" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3563,4663.74,3567,4654.74,3563,4658.74,3559,4654.74,3563,4663.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c0cc2f1dd023a7f3d3035299ccc3e576]
reverse link C_0001018498121270593936 to C_0002074607423113921391--><path d="M3392.28,3325.36 C3308.85,3157.49 3197.84,2966.8 3066,2817 C2796.1,2510.33 2387.69,2253.27 2153.75,2120.05 " fill="none" id="C_0001018498121270593936&lt;-C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3394.74,3330.32,3394.3054,3320.4807,3392.5097,3325.845,3387.1454,3324.0493,3394.74,3330.32" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3072" cy="2827.353" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="49" x="3079" y="2831.897">«friend»</text><!--MD5=[e977aa4de495ba2b5fbec0bf67d0ccaa]
reverse link C_0002074607423113921391 to C_0001018498121270593936--><path d="M2164.11,2167.44 C2452.43,2386.62 2971.09,2784.67 3043,2866 C3165.93,3005.03 3276.57,3176.96 3363.88,3330.36 " fill="none" id="C_0002074607423113921391&lt;-C_0001018498121270593936" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2153.52,2159.4,2155.8766,2166.2151,2163.0739,2166.661,2160.7173,2159.8459,2153.52,2159.4" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3006" y="2824.353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="31" x="3016" y="2831.897">mIp6</text><!--MD5=[e1c95419f0cd0befa1c5fc149e2021d0]
link C_0000274617637055195381 to C_0000603837953379726446--><path d="M2744.52,3892.04 C2816.83,4216.87 3012.6,4948.81 3394,5440 C3593.36,5696.75 3888.63,5914.33 4130.05,6065.87 " fill="none" id="C_0000274617637055195381-&gt;C_0000603837953379726446" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4134.31,6068.54,4128.8054,6060.373,4130.0724,6065.8862,4124.5593,6067.1532,4134.31,6068.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[95ccf103fd9575ce848073bfc43afbf7]
link C_0000274617637055195381 to C_0000970679022985562567--><path d="M2723.78,3892.38 C2748.87,4092.31 2823.15,4421.7 3043,4585 C3135.85,4653.97 3984.28,4600.57 4081,4664 C4177.97,4727.6 4230.57,4854.91 4256.69,4943.45 " fill="none" id="C_0000274617637055195381-&gt;C_0000970679022985562567" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4258.15,4948.43,4259.47,4938.67,4256.75,4943.63,4251.79,4940.91,4258.15,4948.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b0f4166214bc8fec2cb0eb468b0313d]
link C_0000274617637055195381 to C_0002074607423113921391--><path d="M2654.1,3558.97 C2589.73,3375.52 2479.31,3071.88 2368,2817 C2303.44,2669.17 2225.52,2509.4 2155.93,2372.14 " fill="none" id="C_0000274617637055195381-&gt;C_0002074607423113921391" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2153.67,2367.68,2154.1926,2377.515,2155.9403,2372.1349,2161.3204,2373.8826,2153.67,2367.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[acc084ee206e4f2a55cafe415d1a1191]
reverse link C_0000274617637055195381 to C_0002099165682465547464--><path d="M2752.83,3904.82 C2801.61,4087.42 2894.97,4373.67 3043,4585 C3142.7,4727.33 3296.28,4854.08 3410.72,4937.23 " fill="none" id="C_0000274617637055195381&lt;-C_0002099165682465547464" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2749.47,3892.12,2747.139,3898.9439,2752.5414,3903.7203,2754.8725,3896.8963,2749.47,3892.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3079" y="4622.353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="3089" y="4629.897">mIp6Header</text><!--MD5=[bf4b0a4848ee170aa1f409b65ae4e942]
reverse link C_0000603837953379726446 to C_0002066399530883052289--><path d="M4962.75,7057.54 C4979.27,7090.02 4995.42,7122.27 5011,7154 C5024.27,7181.03 5037.59,7208.65 5050.88,7236.64 " fill="none" id="C_0000603837953379726446&lt;-C_0002066399530883052289" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4956.39,7060.47,4953.54,7039.48,4968.86,7054.11,4956.39,7060.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d8e4fc94c4fa244654e5e6925f6a48a1]
@startuml
package [src] as C_0001387619747296316447 {
package [core] as C_0002278286474666070424 {
package [thread] as C_0001183054535709160710 {
class "NetworkData::LowpanContextInfo" as C_0000683747308386236353
class C_0000683747308386236353 {
+GetPrefix() const : const Ip6::Prefix &
-GetPrefix() : Ip6::Prefix &
-SetFrom(const PrefixTlv & aPrefixTlv, const ContextTlv & aContextTlv) : void
__
}
class "Lowpan::Context" as C_0001346570432467457356
class C_0001346570432467457356 {
__
+mCompressFlag : bool
+mContextId : uint8_t
+mIsValid : bool
+mPrefix : Ip6::Prefix
}
class "Lowpan::Lowpan" as C_0001332924320389650839
class C_0001332924320389650839 {
+Lowpan(Instance & aInstance) : void
..
+Compress(Message & aMessage, const Mac::Addresses & aMacAddrs, FrameBuilder & aFrameBuilder) : Error
-Compress(Message & aMessage, const Mac::Addresses & aMacAddrs, FrameBuilder & aFrameBuilder, uint8_t & aHeaderDepth) : Error
-CompressDestinationIid(const Mac::Address & aMacAddr, const Ip6::Address & aIpAddr, const Context & aContext, uint16_t & aHcCtl, FrameBuilder & aFrameBuilder) : Error
-CompressExtensionHeader(Message & aMessage, FrameBuilder & aFrameBuilder, uint8_t & aNextHeader) : Error
-CompressMulticast(const Ip6::Address & aIpAddr, uint16_t & aHcCtl, FrameBuilder & aFrameBuilder) : Error
-CompressSourceIid(const Mac::Address & aMacAddr, const Ip6::Address & aIpAddr, const Context & aContext, uint16_t & aHcCtl, FrameBuilder & aFrameBuilder) : Error
-CompressUdp(Message & aMessage, FrameBuilder & aFrameBuilder) : Error
{static} -ComputeIid(const Mac::Address & aMacAddr, const Context & aContext, Ip6::InterfaceIdentifier & aIid) : Error
+Decompress(Message & aMessage, const Mac::Addresses & aMacAddrs, FrameData & aFrameData, uint16_t aDatagramLength) : Error
+DecompressBaseHeader(Ip6::Header & aIp6Header, bool & aCompressedNextHeader, const Mac::Addresses & aMacAddrs, FrameData & aFrameData) : Error
+DecompressEcn(const Message & aMessage, uint16_t aOffset) const : Ip6::Ecn
-DecompressExtensionHeader(Message & aMessage, FrameData & aFrameData) : Error
+DecompressUdpHeader(Ip6::Udp::Header & aUdpHeader, FrameData & aFrameData) : Error
-DecompressUdpHeader(Message & aMessage, FrameData & aFrameData, uint16_t aDatagramLength) : Error
-DispatchToNextHeader(uint8_t aDispatch, uint8_t & aNextHeader) : Error
-FindContextForId(uint8_t aContextId, Context & aContext) const : void
-FindContextToCompressAddress(const Ip6::Address & aIp6Address, Context & aContext) const : void
{static} +IsLowpanHc(const FrameData & aFrameData) : bool
{static} +IsLowpanHc(const uint8_t * aHeader) : bool
+MarkCompressedEcn(Message & aMessage, uint16_t aOffset) : void
__
{static} -kEcnMask : const uint8_t
{static} -kEcnOffset : const uint8_t
{static} -kExtHdrDispatch : const uint8_t
{static} -kExtHdrDispatchMask : const uint8_t
{static} -kExtHdrEidDst : const uint8_t
{static} -kExtHdrEidFragment : const uint8_t
{static} -kExtHdrEidHbh : const uint8_t
{static} -kExtHdrEidIp6 : const uint8_t
{static} -kExtHdrEidMask : const uint8_t
{static} -kExtHdrEidMobility : const uint8_t
{static} -kExtHdrEidRouting : const uint8_t
{static} -kExtHdrMaxLength : const uint16_t
{static} -kExtHdrNextHeader : const uint8_t
{static} -kHcContextId : const uint16_t
{static} -kHcDispatch : const uint16_t
{static} -kHcDispatchMask : const uint16_t
{static} -kHcDstAddrContext : const uint16_t
{static} -kHcDstAddrMode0 : const uint16_t
{static} -kHcDstAddrMode1 : const uint16_t
{static} -kHcDstAddrMode2 : const uint16_t
{static} -kHcDstAddrMode3 : const uint16_t
{static} -kHcDstAddrModeMask : const uint16_t
{static} -kHcFlowLabel : const uint16_t
{static} -kHcHopLimit1 : const uint16_t
{static} -kHcHopLimit255 : const uint16_t
{static} -kHcHopLimit64 : const uint16_t
{static} -kHcHopLimitMask : const uint16_t
{static} -kHcMulticast : const uint16_t
{static} -kHcNextHeader : const uint16_t
{static} -kHcSrcAddrContext : const uint16_t
{static} -kHcSrcAddrMode0 : const uint16_t
{static} -kHcSrcAddrMode1 : const uint16_t
{static} -kHcSrcAddrMode2 : const uint16_t
{static} -kHcSrcAddrMode3 : const uint16_t
{static} -kHcSrcAddrModeMask : const uint16_t
{static} -kHcTrafficClass : const uint16_t
{static} -kHcTrafficFlow : const uint16_t
{static} -kHcTrafficFlowMask : const uint16_t
{static} -kUdpChecksum : const uint8_t
{static} -kUdpDispatch : const uint8_t
{static} -kUdpDispatchMask : const uint8_t
{static} -kUdpPortMask : const uint8_t
}
class "Lowpan::MeshHeader" as C_0001265256160105741077
class C_0001265256160105741077 {
+AppendTo(FrameBuilder & aFrameBuilder) const : Error
+AppendTo(Message & aMessage) const : Error
+DecrementHopsLeft() : void
+GetDestination() const : uint16_t
+GetHeaderLength() const : uint16_t
+GetHopsLeft() const : uint8_t
+GetSource() const : uint16_t
+Init(uint16_t aSource, uint16_t aDestination, uint8_t aHopsLeft) : void
{static} +IsMeshHeader(const FrameData & aFrameData) : bool
+ParseFrom(const uint8_t * aFrame, uint16_t aFrameLength, uint16_t & aHeaderLength) : Error
+ParseFrom(FrameData & aFrameData) : Error
+ParseFrom(const Message & aMessage) : Error
+ParseFrom(const Message & aMessage, uint16_t & aHeaderLength) : Error
__
{static} -kDeepHopsHeaderLength : const uint16_t
{static} -kDeepHopsLeft : const uint8_t
{static} -kDestShort : const uint8_t
{static} -kDispatch : const uint8_t
{static} -kDispatchMask : const uint8_t
{static} -kHopsLeftMask : const uint8_t
{static} -kMinHeaderLength : const uint16_t
{static} -kSourceShort : const uint8_t
-mDestination : uint16_t
-mHopsLeft : uint8_t
-mSource : uint16_t
}
class "MeshForwarder" as C_0000603590511880671658
class C_0000603590511880671658 {
+MeshForwarder(Instance & aInstance) : void
..
-AnycastRouteLookup(uint8_t aServiceId, AnycastType aType, uint16_t & aMeshDest) const : Error
-AppendHeaderIe(const Message * aMessage, Mac::TxFrame & aFrame) : void
-ApplyDirectTxQueueLimit(Message & aMessage) : void
-CalcFrameVersion(const Neighbor * aNeighbor, bool aIePresent) const : Mac::Frame::Version
-CalcIePresent(const Message * aMessage) : bool
-CheckReachability(const FrameData & aFrameData, const Mac::Addresses & aMeshAddrs) : Error
-ClearReassemblyList() : void
-EvaluateRoutingCost(uint16_t aDest, uint8_t & aBestCost, uint16_t & aBestDest) const : void
+EvictMessage(Message::Priority aPriority) : Error
-EvictMessage(Message & aMessage) : void
-FinalizeMessageDirectTx(Message & aMessage, Error aError) : void
-FrameToMessage(const FrameData & aFrameData, uint16_t aDatagramSize, const Mac::Addresses & aMacAddrs, Message *& aMessage) : Error
+GetCounters() const : const otIpCounters &
-GetForwardFramePriority(const FrameData & aFrameData, const Mac::Addresses & aMeshAddrs, Message::Priority & aPriority) : void
-GetFragmentPriority(Lowpan::FragmentHeader & aFragmentHeader, uint16_t aSrcRloc16, Message::Priority & aPriority) : Error
-GetFramePriority(const FrameData & aFrameData, const Mac::Addresses & aMacAddrs, Message::Priority & aPriority) : Error
-GetMacDestinationAddress(const Ip6::Address & aIp6Addr, Mac::Address & aMacAddr) : void
-GetMacSourceAddress(const Ip6::Address & aIp6Addr, Mac::Address & aMacAddr) : void
+GetMaxTimeInQueue() const : uint32_t
+GetReassemblyQueue() const : const MessageQueue &
+GetRxOnWhenIdle() const : bool
+GetSendQueue() const : const PriorityQueue &
+GetTimeInQueueHistogram(uint16_t & aNumBins, uint32_t & aBinInterval) const : const uint32_t *
-HandleDatagram(Message & aMessage, const Mac::Address & aMacSource) : Error
-HandleDiscoverComplete() : void
-HandleFragment(FrameData & aFrameData, const Mac::Addresses & aMacAddrs, const ThreadLinkInfo & aLinkInfo) : void
-HandleFrameRequest(Mac::TxFrames & aTxFrames) : Mac::TxFrame *
-HandleLowpanHC(const FrameData & aFrameData, const Mac::Addresses & aMacAddrs, const ThreadLinkInfo & aLinkInfo) : void
-HandleMesh(FrameData & aFrameData, const Mac::Address & aMacSource, const ThreadLinkInfo & aLinkInfo) : void
-HandleReceivedFrame(Mac::RxFrame & aFrame) : void
+HandleResolved(const Ip6::Address & aEid, Error aError) : void
-HandleSentFrame(Mac::TxFrame & aFrame, Error aError) : void
-HandleTimeTick() : void
-HandleTxDelayTimer() : void
-IsDirectTxQueueOverMaxFrameThreshold() const : bool
-LogFragmentFrameDrop(Error aError, uint16_t aFrameLength, const Mac::Addresses & aMacAddrs, const Lowpan::FragmentHeader & aFragmentHeader, bool aIsSecure) : void
-LogFrame(const char * aActionText, const Mac::Frame & aFrame, Error aError) : void
-LogIp6Message(MessageAction aAction, const Message & aMessage, const Mac::Address * aAddress, Error aError, LogLevel aLogLevel) : void
-LogIp6SourceDestAddresses(const Ip6::Headers & aHeaders, LogLevel aLogLevel) : void
-LogLowpanHcFrameDrop(Error aError, uint16_t aFrameLength, const Mac::Addresses & aMacAddrs, bool aIsSecure) : void
-LogMeshFragmentHeader(MessageAction aAction, const Message & aMessage, const Mac::Address * aMacAddress, Error aError, uint16_t & aOffset, Mac::Addresses & aMeshAddrs, LogLevel aLogLevel) : Error
-LogMeshIpHeader(const Message & aMessage, uint16_t aOffset, const Mac::Addresses & aMeshAddrs, LogLevel aLogLevel) : void
-LogMeshMessage(MessageAction aAction, const Message & aMessage, const Mac::Address * aAddress, Error aError, LogLevel aLogLevel) : void
-LogMessage(MessageAction aAction, const Message & aMessage, Error aError) : void
-LogMessage(MessageAction aAction, const Message & aMessage) : void
-LogMessage(MessageAction aAction, const Message & aMessage, Error aError, const Mac::Address * aAddress) : void
-MessageActionToString(MessageAction aAction, Error aError) : const char *
-MessagePriorityToString(const Message & aMessage) : const char *
-PauseMessageTransmissions() : void
-PrepareDataFrame(Mac::TxFrame & aFrame, Message & aMessage, const Mac::Addresses & aMacAddrs, bool aAddMeshHeader, uint16_t aMeshSource, uint16_t aMeshDest, bool aAddFragHeader) : uint16_t
-PrepareDataFrameWithNoMeshHeader(Mac::TxFrame & aFrame, Message & aMessage, const Mac::Addresses & aMacAddrs) : uint16_t
-PrepareEmptyFrame(Mac::TxFrame & aFrame, const Mac::Address & aMacDest, bool aAckRequest) : void
-PrepareMacHeaders(Mac::TxFrame & aFrame, Mac::Frame::Type aFrameType, const Mac::Addresses & aMacAddr, const Mac::PanIds & aPanIds, Mac::Frame::SecurityLevel aSecurityLevel, Mac::Frame::KeyIdMode aKeyIdMode, const Message * aMessage) : void
-PrepareNextDirectTransmission() : Message *
-RemoveAgedMessages() : Error
+RemoveDataResponseMessages() : void
-RemoveMessageIfNoPendingTx(Message & aMessage) : bool
+RemoveMessages(Child & aChild, Message::SubType aSubType) : void
+ResetCounters() : void
+ResetTimeInQueueStat() : void
-ResumeMessageTransmissions() : void
-ScheduleTransmissionTask() : void
-SendDestinationUnreachable(uint16_t aMeshSource, const Ip6::Headers & aIp6Headers) : void
+SendEmptyMessage() : Error
-SendIcmpErrorIfDstUnreach(const Message & aMessage, const Mac::Addresses & aMacAddrs) : void
-SendMesh(Message & aMessage, Mac::TxFrame & aFrame) : void
+SendMessage(OwnedPtr<Message> aMessagePtr) : void
+SetDiscoverParameters(const Mac::ChannelMask & aScanChannels) : void
+SetRxOnWhenIdle(bool aRxOnWhenIdle) : void
+Start() : void
+Stop() : void
-UpdateEcnOrDrop(Message & aMessage, bool aPreparingToSend) : Error
-UpdateFragmentPriority(Lowpan::FragmentHeader & aFragmentHeader, uint16_t aFragmentLength, uint16_t aSrcRloc16, Message::Priority aPriority) : void
-UpdateIp6Route(Message & aMessage) : Error
-UpdateIp6RouteFtd(const Ip6::Header & aIp6Header, Message & aMessage) : Error
-UpdateMeshRoute(Message & aMessage) : Error
-UpdateNeighborLinkFailures(Neighbor & aNeighbor, Error aError, bool aAllowNeighborRemove, uint8_t aFailLimit) : void
-UpdateNeighborOnSentFrame(Mac::TxFrame & aFrame, Error aError, const Mac::Address & aMacDest, bool aIsDataPoll) : Neighbor *
-UpdateReassemblyList() : bool
-UpdateRoutes(const FrameData & aFrameData, const Mac::Addresses & aMeshAddrs) : void
-UpdateSendMessage(Error aFrameTxError, Mac::Address & aMacDest, Neighbor * aNeighbor) : void
__
{static} -kFailedCslDataPollTransmissions : const uint8_t
{static} -kFailedRouterTransmissions : const uint8_t
{static} -kMeshHeaderFrameFcsSize : const uint8_t
{static} -kMeshHeaderFrameMtu : const uint8_t
{static} -kMeshHeaderHopsLeft : const uint8_t
{static} -kReassemblyTimeout : const uint8_t
{static} -kTimeInQueueDropMsg : const uint32_t
{static} -kTimeInQueueMarkEcn : const uint32_t
{static} -kTxDelayInterval : const uint32_t
-mAddMeshHeader : bool
-mDataPollSender : DataPollSender
-mDelayNextTx : bool
-mEnabled : bool
-mFragTag : uint16_t
-mFragmentPriorityList : FragmentPriorityList
-mIndirectSender : IndirectSender
-mIpCounters : otIpCounters
-mMacAddrs : Mac::Addresses
-mMeshDest : uint16_t
-mMeshSource : uint16_t
-mMessageNextOffset : uint16_t
-mReassemblyList : MessageQueue
-mScheduleTransmissionTask : TxTask
-mSendBusy : bool
-mSendMessage : Message *
-mSendQueue : PriorityQueue
-mTxDelayTimer : TxDelayTimer
-mTxPaused : bool
-mTxQueueStats : TxQueueStats
}
class "NetworkData::NetworkData" as C_0000576691251651384823
class C_0000576691251651384823 {
__
}
class "IndirectSender" as C_0000365511659643489006
class C_0000365511659643489006 {
__
}
class "Instance" as C_0002074607423113921391
class C_0002074607423113921391 {
__
}
}
package [common] as C_0000538251318670428019 {
class "Message" as C_0000603837953379726446
class C_0000603837953379726446 {
+AddLqi(uint8_t aLqi) : void
+AddRss(int8_t aRss) : void
+Append<ObjectType>(const ObjectType & aObject) : Error
+AppendBytes(const void * aBuf, uint16_t aLength) : Error
+AppendBytesFromMessage(const Message & aMessage, uint16_t aOffset, uint16_t aLength) : Error
+AppendData<DataLengthType kDataLengthType>(const Data<kDataLengthType> & aData) : Error
+ClearChildMask(uint16_t aChildIndex) : void
+ClearDirectTransmission() : void
+Clone() const : Message *
+Clone(uint16_t aLength) const : Message *
+Compare<ObjectType>(uint16_t aOffset, const ObjectType & aObject) const : _Bool
+CompareBytes(uint16_t aOffset, const Message & aOtherMessage, uint16_t aOtherOffset, uint16_t aLength, ByteMatcher aMatcher = nullptr) const : bool
+CompareBytes(uint16_t aOffset, const void * aBuf, uint16_t aLength, ByteMatcher aMatcher = nullptr) const : bool
+Free() : void
+GetAverageLqi() const : uint8_t
+GetAverageRss() const : int8_t
+GetBufferCount() const : uint8_t
+GetChannel() const : uint8_t
+GetChildMask(uint16_t aChildIndex) const : bool
+GetDatagramTag() const : uint32_t
+GetDoNotEvict() const : bool
-GetFirstChunk(uint16_t aOffset, uint16_t & aLength, Chunk & aChunk) const : void
-GetFirstChunk(uint16_t aOffset, uint16_t & aLength, MutableChunk & aChunk) : void
+GetInstance() const : Instance &
+GetLength() const : uint16_t
+GetLinkInfo(ThreadLinkInfo & aLinkInfo) const : Error
+GetLqiAverager() const : const LqiAverager &
+GetMeshDest() const : uint16_t
-GetMessagePool() const : MessagePool *
+GetMessageQueue() const : MessageQueue *
+GetMulticastLoop() const : bool
+GetNext() const : Message *
-GetNextChunk(uint16_t & aLength, MutableChunk & aChunk) : void
-GetNextChunk(uint16_t & aLength, Chunk & aChunk) const : void
+GetOffset() const : uint16_t
+GetOrigin() const : Origin
+GetPanId() const : uint16_t
+GetPriority() const : Priority
+GetPriorityQueue() const : PriorityQueue *
+GetPsduCount() const : uint8_t
#GetReserved() const : uint16_t
+GetRssAverager() const : const RssAverager &
+GetSubType() const : SubType
+GetTimestamp() const : TimeMilli
+GetTxSuccess() const : bool
+GetType() const : Type
+InsertHeader(uint16_t aOffset, uint16_t aLength) : Error
+IsChildPending() const : bool
+IsDirectTransmission() const : bool
+IsDstPanIdBroadcast() const : bool
-IsInAQueue() const : bool
+IsLinkSecurityEnabled() const : bool
+IsLoopbackToHostAllowed() const : bool
+IsOriginHostTrusted() const : bool
+IsOriginHostUntrusted() const : bool
+IsOriginThreadNetif() const : bool
+IsResolvingAddress() const : bool
+IsSubTypeMle() const : bool
+IsTimeSync() const : bool
+MoveOffset(int aDelta) : void
-Next() : Message *&
-Next() const : Message *const &
{static} -NextOf(Message * aMessage) : Message *
{static} -NextOf(const Message * aMessage) : const Message *
+Prepend<ObjectType>(const ObjectType & aObject) : Error
+PrependBytes(const void * aBuf, uint16_t aLength) : Error
-Prev() : Message *&
{static} +PriorityToString(Priority aPriority) : const char *
+Read<ObjectType>(uint16_t aOffset, ObjectType & aObject) const : Error
+Read(uint16_t aOffset, void * aBuf, uint16_t aLength) const : Error
+ReadBytes(uint16_t aOffset, void * aBuf, uint16_t aLength) const : uint16_t
+RemoveHeader(uint16_t aOffset, uint16_t aLength) : void
+RemoveHeader(uint16_t aLength) : void
-ResizeMessage(uint16_t aLength) : Error
+SetChannel(uint8_t aChannel) : void
+SetChildMask(uint16_t aChildIndex) : void
+SetDatagramTag(uint32_t aTag) : void
+SetDirectTransmission() : void
+SetDoNotEvict(bool aDoNotEvict) : void
+SetLength(uint16_t aLength) : Error
+SetLinkSecurityEnabled(bool aEnabled) : void
+SetLoopbackToHostAllowed(bool aAllowLoopbackToHost) : void
-SetLqiAverager(const LqiAverager & aLqiAverager) : void
+SetMeshDest(uint16_t aMeshDest) : void
-SetMessagePool(MessagePool * aMessagePool) : void
-SetMessageQueue(MessageQueue * aMessageQueue) : void
+SetMulticastLoop(bool aMulticastLoop) : void
+SetOffset(uint16_t aOffset) : void
+SetOrigin(Origin aOrigin) : void
+SetPanId(uint16_t aPanId) : void
+SetPriority(Priority aPriority) : Error
-SetPriorityQueue(PriorityQueue * aPriorityQueue) : void
#SetReserved(uint16_t aReservedHeader) : void
+SetResolvingAddress(bool aResolvingAddress) : void
-SetRssAverager(const RssAverager & aRssAverager) : void
+SetSubType(SubType aSubType) : void
+SetTimestamp(TimeMilli aTimestamp) : void
+SetTimestampToNow() : void
+SetTxSuccess(bool aTxSuccess) : void
+SetType(Type aType) : void
+UpdateLinkInfoFrom(const ThreadLinkInfo & aLinkInfo) : void
+Write<ObjectType>(uint16_t aOffset, const ObjectType & aObject) : void
+WriteBytes(uint16_t aOffset, const void * aBuf, uint16_t aLength) : void
+WriteBytesFromMessage(uint16_t aWriteOffset, const Message & aMessage, uint16_t aReadOffset, uint16_t aLength) : void
+WriteData<DataLengthType kDataLengthType>(uint16_t aOffset, const Data<kDataLengthType> & aData) : void
__
{static} +kNumPriorities : const uint8_t
}
class "FrameData" as C_0000970679022985562567
class C_0000970679022985562567 {
+CanRead(uint16_t aLength) const : bool
+Read<ObjectType>(ObjectType & aObject) : Error
+ReadBigEndianUint16(uint16_t & aUint16) : Error
+ReadBigEndianUint32(uint32_t & aUint32) : Error
+ReadBytes(void * aBuffer, uint16_t aLength) : Error
+ReadLittleEndianUint16(uint16_t & aUint16) : Error
+ReadLittleEndianUint32(uint32_t & aUint32) : Error
+ReadUint8(uint8_t & aUint8) : Error
+SkipOver(uint16_t aLength) : void
__
}
class "FrameBuilder" as C_0001613647999044296420
class C_0001613647999044296420 {
+Append<ObjectType>(const ObjectType & aObject) : Error
+AppendBigEndianUint16(uint16_t aUint16) : Error
+AppendBigEndianUint32(uint32_t aUint32) : Error
+AppendBytes(const void * aBuffer, uint16_t aLength) : Error
+AppendBytesFromMessage(const Message & aMessage, uint16_t aOffset, uint16_t aLength) : Error
+AppendLittleEndianUint16(uint16_t aUint16) : Error
+AppendLittleEndianUint32(uint32_t aUint32) : Error
+AppendMacAddress(const Mac::Address & aMacAddress) : Error
+AppendUint8(uint8_t aUint8) : Error
+CanAppend(uint16_t aLength) const : bool
+GetBytes() const : const uint8_t *
+GetLength() const : uint16_t
+GetMaxLength() const : uint16_t
+GetRemainingLength() const : uint16_t
+Init(void * aBuffer, uint16_t aLength) : void
+Insert<ObjectType>(uint16_t aOffset, const ObjectType & aObject) : Error
+InsertBytes(uint16_t aOffset, const void * aBuffer, uint16_t aLength) : Error
+RemoveBytes(uint16_t aOffset, uint16_t aLength) : void
+SetMaxLength(uint16_t aLength) : void
+Write<ObjectType>(uint16_t aOffset, const ObjectType & aObject) : void
+WriteBytes(uint16_t aOffset, const void * aBuffer, uint16_t aLength) : void
__
-mBuffer : uint8_t *
-mLength : uint16_t
-mMaxLength : uint16_t
}
class "ThreadLinkInfo" as C_0001739458148921928763
class C_0001739458148921928763 {
+GetChannel() const : uint8_t
+GetLqi() const : uint8_t
+GetPanId() const : Mac::PanId
+GetRss() const : int8_t
+IsDstPanIdBroadcast() const : bool
+IsLinkSecurityEnabled() const : bool
+SetFrom(const Mac::RxFrame & aFrame) : void
__
}
}
package [net] as C_0000215011246174653850 {
class "Ip6::Header" as C_0002099165682465547464
class C_0002099165682465547464 {
+GetDestination() const : const Address &
+GetDestination() : Address &
+GetDscp() const : uint8_t
+GetEcn() const : Ecn
+GetFlow() const : uint32_t
+GetHopLimit() const : uint8_t
+GetNextHeader() const : uint8_t
+GetPayloadLength() const : uint16_t
+GetSource() const : const Address &
+GetSource() : Address &
+GetTrafficClass() const : uint8_t
+GetVerionTrafficClassFlow() const : uint32_t
+InitVersionTrafficClassFlow() : void
+IsValid() const : bool
+IsVersion6() const : bool
+ParseFrom(const Message & aMessage) : Error
+SetDestination(const Address & aDestination) : void
+SetDscp(uint8_t aDscp) : void
+SetEcn(Ecn aEcn) : void
+SetFlow(uint32_t aFlow) : void
+SetHopLimit(uint8_t aHopLimit) : void
+SetNextHeader(uint8_t aNextHeader) : void
+SetPayloadLength(uint16_t aLength) : void
+SetSource(const Address & aSource) : void
+SetTrafficClass(uint8_t aTc) : void
+SetVerionTrafficClassFlow(uint32_t aVerTcFlow) : void
__
{static} +kDestinationFieldOffset : const uint8_t
{static} -kDscpMask : const uint16_t
{static} -kDscpOffset : const uint8_t
{static} -kEcnMask : const uint8_t
{static} -kEcnOffset : const uint8_t
{static} -kFlowMask : const uint32_t
{static} +kHopLimitFieldOffset : const uint8_t
{static} +kNextHeaderFieldOffset : const uint8_t
{static} +kPayloadLengthFieldOffset : const uint8_t
{static} +kSourceFieldOffset : const uint8_t
{static} -kTrafficClassMask : const uint16_t
{static} -kTrafficClassOffset : const uint8_t
{static} -kVersTcFlowInit : const uint32_t
{static} -kVersion6 : const uint8_t
{static} -kVersionMask : const uint8_t
-mDestination : Address
-mHopLimit : uint8_t
-mNextHeader : uint8_t
-mPayloadLength : uint16_t
-mSource : Address
-mVerTcFlow : Header::(anonymous_428478)
}
class "Ip6::Ip6" as C_0001018498121270593936
class C_0001018498121270593936 {
+Ip6(Instance & aInstance) : void
..
-AddMplOption(Message & aMessage, Header & aHeader) : Error
-CleanupFragmentationBuffer() : void
{static} +DscpToPriority(uint8_t aDscp) : Message::Priority
{static} +EcnToString(Ecn aEcn) : const char *
-EnqueueDatagram(Message & aMessage) : void
-FragmentDatagram(Message & aMessage, uint8_t aIpProto) : Error
+GetSendQueue() const : const PriorityQueue &
+HandleDatagram(OwnedPtr<Message> aMessagePtr, bool aIsReassembled = false) : Error
-HandleExtensionHeaders(OwnedPtr<Message> & aMessagePtr, MessageInfo & aMessageInfo, Header & aHeader, uint8_t & aNextHeader, bool & aReceive) : Error
-HandleFragment(Message & aMessage) : Error
-HandleOptions(Message & aMessage, Header & aHeader, bool & aReceive) : Error
-HandlePayload(Header & aIp6Header, OwnedPtr<Message> & aMessagePtr, MessageInfo & aMessageInfo, uint8_t aIpProto, Message::Ownership aMessageOwnership) : Error
-HandleSendQueue() : void
-HandleTimeTick() : void
-InsertMplOption(Message & aMessage, Header & aHeader) : Error
{static} +IpProtoToString(uint8_t aIpProto) : const char *
-IsOnLink(const Address & aAddress) const : bool
+IsReceiveIp6FilterEnabled() const : bool
+NewMessage(uint16_t aReserved) : Message *
+NewMessage() : Message *
+NewMessage(uint16_t aReserved, const Message::Settings & aSettings) : Message *
+NewMessageFromData(const uint8_t * aData, uint16_t aDataLength, const Message::Settings & aSettings) : Message *
-PassToHost(OwnedPtr<Message> & aMessagePtr, const MessageInfo & aMessageInfo, uint8_t aIpProto, bool aApplyFilter, bool aReceive, Message::Ownership aMessageOwnership) : Error
-PrepareMulticastToLargerThanRealmLocal(Message & aMessage, const Header & aHeader) : Error
{static} -PriorityToDscp(Message::Priority aPriority) : uint8_t
-RemoveMplOption(Message & aMessage) : Error
-RouteLookup(const Address & aSource, const Address & aDestination) const : Error
+SelectSourceAddress(MessageInfo & aMessageInfo) const : Error
+SelectSourceAddress(const Address & aDestination) const : const Address *
+SendDatagram(Message & aMessage, MessageInfo & aMessageInfo, uint8_t aIpProto) : Error
-SendIcmpError(Message & aMessage, Icmp::Header::Type aIcmpType, Icmp::Header::Code aIcmpCode) : void
+SendRaw(OwnedPtr<Message> aMessage) : Error
+SetReceiveDatagramCallback(otIp6ReceiveCallback aCallback, void * aCallbackContext) : void
+SetReceiveIp6FilterEnabled(bool aEnabled) : void
{static} -TakeOrCopyMessagePtr(OwnedPtr<Message> & aTargetPtr, OwnedPtr<Message> & aMessagePtr, Message::Ownership aMessageOwnership) : Error
-UpdateReassemblyList() : void
__
{static} -kDefaultHopLimit : const uint8_t
{static} -kIp6ReassemblyTimeout : const uint8_t
{static} -kMinimalMtu : const uint16_t
-mIcmp : Icmp
-mIsReceiveIp6FilterEnabled : bool
-mMpl : Mpl
-mReassemblyList : MessageQueue
-mReceiveIp6DatagramCallback : Callback<otIp6ReceiveCallback>
-mSendQueue : PriorityQueue
-mSendQueueTask : SendQueueTask
-mTcp : Tcp
-mUdp : Udp
}
class "Ip6::Headers" as C_0000274617637055195381
class C_0000274617637055195381 {
+DecompressFrom(const Message & aMessage, uint16_t aOffset, const Mac::Addresses & aMacAddrs) : Error
+DecompressFrom(const FrameData & aFrameData, const Mac::Addresses & aMacAddrs, Instance & aInstance) : Error
+GetChecksum() const : uint16_t
+GetDestinationAddress() const : const Address &
+GetDestinationPort() const : uint16_t
+GetEcn() const : Ecn
+GetIcmpHeader() const : const Icmp::Header &
+GetIp6Header() const : const Header &
+GetIpProto() const : uint8_t
+GetSourceAddress() const : const Address &
+GetSourcePort() const : uint16_t
+GetTcpHeader() const : const Tcp::Header &
+GetUdpHeader() const : const Udp::Header &
+IsIcmp6() const : bool
+IsTcp() const : bool
+IsUdp() const : bool
+ParseFrom(const Message & aMessage) : Error
__
-mHeader : Headers::(anonymous_488478)
-mIp6Header : Header
}
}
package [coap] as C_0001889813544493651964 {
class "Coap::Message" as C_0002066399530883052289
class C_0002066399530883052289 {
+AppendBlockOption(BlockType aType, uint32_t aNum, bool aMore, otCoapBlockSzx aSize) : Error
+AppendContentFormatOption(otCoapOptionContentFormat aContentFormat) : Error
+AppendMaxAgeOption(uint32_t aMaxAge) : Error
+AppendObserveOption(uint32_t aObserve) : Error
+AppendOption(uint16_t aNumber, uint16_t aLength, const void * aValue) : Error
+AppendOptionFromMessage(uint16_t aNumber, uint16_t aLength, const Message & aMessage, uint16_t aOffset) : Error
-AppendOptionHeader(uint16_t aNumber, uint16_t aLength) : Error
+AppendProxyUriOption(const char * aProxyUri) : Error
+AppendStringOption(uint16_t aNumber, const char * aValue) : Error
+AppendUintOption(uint16_t aNumber, uint32_t aValue) : Error
+AppendUriPathOptions(const char * aUriPath) : Error
+AppendUriQueryOption(const char * aUriQuery) : Error
+Clone(uint16_t aLength) const : Message *
+Clone() const : Message *
+CodeToString() const : const char *
+Finish() : void
+GenerateRandomToken(uint8_t aTokenLength) : Error
+GetBlockWiseBlockNumber() const : uint32_t
+GetBlockWiseBlockSize() const : otCoapBlockSzx
+GetCode() const : uint8_t
+GetHeaderLength() const : uint16_t
-GetHelpData() : HelpData &
-GetHelpData() const : const HelpData &
{static} +GetHelpDataReserved() : uint16_t
+GetMessageId() const : uint16_t
+GetNextCoapMessage() const : const Message *
+GetNextCoapMessage() : Message *
+GetOptionStart() const : uint16_t
-GetToken() : uint8_t *
+GetToken() const : const uint8_t *
+GetTokenLength() const : uint8_t
+GetType() const : uint8_t
+GetUriPath(char * aUriPath) const : Error
+GetVersion() const : uint8_t
+Init(Type aType, Code aCode, Uri aUri) : Error
+Init() : void
+Init(Type aType, Code aCode) : void
+InitAsPost(const Ip6::Address & aDestination, Uri aUri) : Error
+IsAck() const : bool
+IsConfirmable() const : bool
+IsConfirmablePostRequest() const : bool
+IsDeleteRequest() const : bool
+IsEmpty() const : bool
+IsGetRequest() const : bool
+IsMoreBlocksFlagSet() const : bool
+IsNonConfirmable() const : bool
+IsNonConfirmablePostRequest() const : bool
+IsPostRequest() const : bool
+IsPutRequest() const : bool
+IsRequest() const : bool
+IsReset() const : bool
+IsResponse() const : bool
+IsTokenEqual(const Message & aMessage) const : bool
+ParseHeader() : Error
+ReadBlockOptionValues(uint16_t aBlockType) : Error
+ReadUriPathOptions(char (&)[33] aUriPath) const : Error
+SetBlockWiseBlockNumber(uint32_t aBlockNumber) : void
+SetBlockWiseBlockSize(otCoapBlockSzx aBlockSize) : void
+SetCode(Code aCode) : void
+SetDefaultResponseHeader(const Message & aRequest) : Error
+SetMessageId(uint16_t aMessageId) : void
+SetMoreBlocksFlag(bool aMoreBlocks) : void
+SetPayloadMarker() : Error
+SetToken(const uint8_t * aToken, uint8_t aTokenLength) : Error
+SetTokenFromMessage(const Message & aMessage) : Error
-SetTokenLength(uint8_t aTokenLength) : void
+SetType(Type aType) : void
+SetVersion(uint8_t aVersion) : void
-WriteExtendedOptionField(uint16_t aValue, uint8_t *& aBuffer) : uint8_t
__
{static} -kBlockMOffset : const uint8_t
{static} -kBlockNumMax : const uint32_t
{static} -kBlockNumOffset : const uint8_t
{static} +kBlockSzxBase : const uint8_t
{static} -kBlockSzxOffset : const uint8_t
{static} +kDefaultTokenLength : const uint8_t
{static} -kHelpDataAlignment : const uint8_t
{static} -kMaxHeaderLength : const uint16_t
{static} -kMaxOptionHeaderSize : const uint8_t
{static} +kMaxReceivedUriPath : const uint8_t
{static} +kMaxTokenLength : const uint8_t
{static} -kMinHeaderLength : const uint16_t
{static} -kObserveMask : const uint32_t
{static} -kOption1ByteExtension : const uint8_t
{static} -kOption1ByteExtensionOffset : const uint16_t
{static} -kOption2ByteExtension : const uint8_t
{static} -kOption2ByteExtensionOffset : const uint16_t
{static} -kOptionDeltaMask : const uint8_t
{static} -kOptionDeltaOffset : const uint8_t
{static} -kOptionLengthMask : const uint8_t
{static} -kOptionLengthOffset : const uint8_t
{static} -kPayloadMarker : const uint8_t
{static} -kTokenLengthMask : const uint8_t
{static} -kTokenLengthOffset : const uint8_t
{static} -kTypeMask : const uint8_t
{static} -kTypeOffset : const uint8_t
{static} -kVersion1 : const uint8_t
{static} -kVersionMask : const uint8_t
{static} -kVersionOffset : const uint8_t
}
}
package [instance] as C_0000273137096413401361 {
class "Instance" as C_0002074607423113921391
class C_0002074607423113921391 {
-Instance() : void
..
-AfterInit() : void
+ErasePersistentInfo() : Error
+FactoryReset() : void
+Finalize() : void
+Get<Type>() : Type &
{static} +Get() : Instance &
+GetApplicationCoap() : Coap::Coap &
+GetApplicationCoapSecure() : Coap::CoapSecure &
+GetBufferInfo(BufferInfo & aInfo) : void
{static} +GetHeap() : Utils::Heap &
+GetId() const : uint32_t
{static} +GetLogLevel() : LogLevel
{static} +InitSingle() : Instance &
{static} +IsDnsNameCompressionEnabled() : bool
+IsInitialized() const : bool
+Reset() : void
+ResetBufferInfo() : void
{static} +SetDnsNameCompressionEnabled(bool aEnabled) : void
{static} +SetLogLevel(LogLevel aLogLevel) : void
__
-mActiveDataset : MeshCoP::ActiveDatasetManager
-mAddressResolver : AddressResolver
-mAnnounceBegin : AnnounceBeginServer
-mAnnounceSender : AnnounceSender
-mAnycastLocator : AnycastLocator
-mApplicationBleSecure : Ble::BleSecure
-mApplicationCoap : Coap::Coap
-mApplicationCoapSecure : Coap::CoapSecure
-mBackboneRouterLeader : BackboneRouter::Leader
-mBorderAgent : MeshCoP::BorderAgent
-mChannelManager : Utils::ChannelManager
-mChannelMonitor : Utils::ChannelMonitor
-mChildSupervisor : ChildSupervisor
-mCommissioner : MeshCoP::Commissioner
-mDatasetUpdater : MeshCoP::DatasetUpdater
-mDhcp6Client : Dhcp6::Client
-mDhcp6Server : Dhcp6::Server
-mDiags : FactoryDiags::Diags
-mDiscoverScanner : Mle::DiscoverScanner
-mDnsClient : Dns::Client
-mDnsDso : Dns::Dso
-mDnssdServer : Dns::ServiceDiscovery::Server
-mDuaManager : DuaManager
-mEnergyScan : EnergyScanServer
-mExtendedPanIdManager : MeshCoP::ExtendedPanIdManager
-mHistoryTracker : Utils::HistoryTracker
-mId : uint32_t
-mIp6 : Ip6::Ip6
-mIp6Filter : Ip6::Filter
-mIsInitialized : bool
-mJamDetector : Utils::JamDetector
-mJoiner : MeshCoP::Joiner
-mJoinerRouter : MeshCoP::JoinerRouter
-mKeyManager : KeyManager
-mLeader : MeshCoP::Leader
-mLinkRaw : Mac::LinkRaw
-mLowpan : Lowpan::Lowpan
-mMac : Mac::Mac
-mMbedTls : Crypto::MbedTls
-mMeshForwarder : MeshForwarder
-mMessagePool : MessagePool
-mMleRouter : Mle::MleRouter
-mMlrManager : MlrManager
-mNeighborDiscoveryAgent : NeighborDiscovery::Agent
-mNetworkDataLeader : NetworkData::Leader
-mNetworkDataLocal : NetworkData::Local
-mNetworkDataNotifier : NetworkData::Notifier
-mNetworkDataPublisher : NetworkData::Publisher
-mNetworkDataServiceManager : NetworkData::Service::Manager
-mNetworkDiagnosticClient : NetworkDiagnostic::Client
-mNetworkDiagnosticServer : NetworkDiagnostic::Server
-mNetworkNameManager : MeshCoP::NetworkNameManager
-mNotifier : Notifier
-mPanIdQuery : PanIdQueryServer
-mPendingDataset : MeshCoP::PendingDatasetManager
-mPingSender : Utils::PingSender
-mPowerCalibration : Utils::PowerCalibration
-mRadio : Radio
-mRandomManager : Random::Manager
-mSettings : Settings
-mSettingsDriver : SettingsDriver
-mSlaac : Utils::Slaac
-mSntpClient : Sntp::Client
-mSrpClient : Srp::Client
-mSrpClientBuffers : Utils::SrpClientBuffers
-mSrpServer : Srp::Server
-mSupervisionListener : SupervisionListener
-mTaskletScheduler : Tasklet::Scheduler
-mThreadNetif : ThreadNetif
-mTimeTicker : TimeTicker
-mTimerMicroScheduler : TimerMicro::Scheduler
-mTimerMilliScheduler : TimerMilli::Scheduler
-mTmfAgent : Tmf::Agent
-mTmfSecureAgent : Tmf::SecureAgent
-mUptime : Uptime
{static} -sDnsNameCompressionEnabled : bool
{static} -sHeap : Utils::Heap *
{static} -sLogLevel : LogLevel
}
}
}
}
C_0001332924320389650839 ..> C_0002074607423113921391
C_0001332924320389650839 ..> C_0000970679022985562567
C_0001332924320389650839 ..> C_0000603837953379726446
C_0001332924320389650839 ..> C_0001613647999044296420
C_0001332924320389650839 ..> C_0002099165682465547464
C_0001332924320389650839 ..> C_0001346570432467457356
C_0001265256160105741077 ..> C_0000970679022985562567
C_0001265256160105741077 ..> C_0000603837953379726446
C_0001265256160105741077 ..> C_0001613647999044296420
C_0000603590511880671658 ..> C_0000970679022985562567
C_0000603590511880671658 ..> C_0001739458148921928763
C_0000603590511880671658 ..> C_0000274617637055195381
C_0000603590511880671658 ..> C_0002099165682465547464
C_0000603590511880671658 - -> C_0000603837953379726446 : -mSendMessage
C_0000603590511880671658 o- - C_0000365511659643489006 : -mIndirectSender
C_0000603590511880671658 <.. C_0001018498121270593936 : +<<friend>>
C_0000603590511880671658 <.. C_0002074607423113921391 : +<<friend>>
C_0000603837953379726446 ..> C_0002074607423113921391
C_0000603837953379726446 ..> C_0001739458148921928763
C_0001613647999044296420 ..> C_0000603837953379726446
C_0002099165682465547464 ..> C_0000603837953379726446
C_0001018498121270593936 ..> C_0000603837953379726446
C_0001018498121270593936 ..> C_0002099165682465547464
C_0001018498121270593936 <.. C_0002074607423113921391 : +<<friend>>
C_0000274617637055195381 ..> C_0000603837953379726446
C_0000274617637055195381 ..> C_0000970679022985562567
C_0000274617637055195381 ..> C_0002074607423113921391
C_0000274617637055195381 o- - C_0002099165682465547464 : -mIp6Header
C_0000603837953379726446 <|- - C_0002066399530883052289
C_0002074607423113921391 o- - C_0001018498121270593936 : -mIp6
C_0002074607423113921391 o- - C_0001332924320389650839 : -mLowpan
C_0002074607423113921391 o- - C_0000603590511880671658 : -mMeshForwarder

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 22+36-2370
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>